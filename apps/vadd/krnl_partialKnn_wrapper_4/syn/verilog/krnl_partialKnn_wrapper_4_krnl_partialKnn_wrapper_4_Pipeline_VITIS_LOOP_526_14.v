// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module krnl_partialKnn_wrapper_4_krnl_partialKnn_wrapper_4_Pipeline_VITIS_LOOP_526_14 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        local_kNearstId_reload,
        local_kNearstId_1_reload,
        local_kNearstId_2_reload,
        local_kNearstId_3_reload,
        local_kNearstId_4_reload,
        local_kNearstId_5_reload,
        local_kNearstId_6_reload,
        local_kNearstId_7_reload,
        local_kNearstId_8_reload,
        local_kNearstId_9_reload,
        local_kNearstId_10_reload,
        local_kNearstDist_reload,
        local_kNearstDist_1_reload,
        local_kNearstDist_2_reload,
        local_kNearstDist_3_reload,
        local_kNearstDist_4_reload,
        local_kNearstDist_5_reload,
        local_kNearstDist_6_reload,
        local_kNearstDist_7_reload,
        local_kNearstDist_8_reload,
        local_kNearstDist_9_reload,
        local_kNearstDist_10_reload,
        global_kNearstId_9_out,
        global_kNearstId_9_out_ap_vld,
        global_kNearstId_8_out,
        global_kNearstId_8_out_ap_vld,
        global_kNearstId_7_out,
        global_kNearstId_7_out_ap_vld,
        global_kNearstId_6_out,
        global_kNearstId_6_out_ap_vld,
        global_kNearstId_5_out,
        global_kNearstId_5_out_ap_vld,
        global_kNearstId_4_out,
        global_kNearstId_4_out_ap_vld,
        global_kNearstId_3_out,
        global_kNearstId_3_out_ap_vld,
        global_kNearstId_2_out,
        global_kNearstId_2_out_ap_vld,
        global_kNearstId_1_out,
        global_kNearstId_1_out_ap_vld,
        global_kNearstDist_9_out,
        global_kNearstDist_9_out_ap_vld,
        global_kNearstDist_8_out,
        global_kNearstDist_8_out_ap_vld,
        global_kNearstDist_7_out,
        global_kNearstDist_7_out_ap_vld,
        global_kNearstDist_6_out,
        global_kNearstDist_6_out_ap_vld,
        global_kNearstDist_5_out,
        global_kNearstDist_5_out_ap_vld,
        global_kNearstDist_4_out,
        global_kNearstDist_4_out_ap_vld,
        global_kNearstDist_3_out,
        global_kNearstDist_3_out_ap_vld,
        global_kNearstDist_2_out,
        global_kNearstDist_2_out_ap_vld,
        global_kNearstDist_1_out,
        global_kNearstDist_1_out_ap_vld,
        global_kNearstDist_out,
        global_kNearstDist_out_ap_vld,
        global_kNearstId_out,
        global_kNearstId_out_ap_vld
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] local_kNearstId_reload;
input  [31:0] local_kNearstId_1_reload;
input  [31:0] local_kNearstId_2_reload;
input  [31:0] local_kNearstId_3_reload;
input  [31:0] local_kNearstId_4_reload;
input  [31:0] local_kNearstId_5_reload;
input  [31:0] local_kNearstId_6_reload;
input  [31:0] local_kNearstId_7_reload;
input  [31:0] local_kNearstId_8_reload;
input  [31:0] local_kNearstId_9_reload;
input  [31:0] local_kNearstId_10_reload;
input  [31:0] local_kNearstDist_reload;
input  [31:0] local_kNearstDist_1_reload;
input  [31:0] local_kNearstDist_2_reload;
input  [31:0] local_kNearstDist_3_reload;
input  [31:0] local_kNearstDist_4_reload;
input  [31:0] local_kNearstDist_5_reload;
input  [31:0] local_kNearstDist_6_reload;
input  [31:0] local_kNearstDist_7_reload;
input  [31:0] local_kNearstDist_8_reload;
input  [31:0] local_kNearstDist_9_reload;
input  [31:0] local_kNearstDist_10_reload;
output  [31:0] global_kNearstId_9_out;
output   global_kNearstId_9_out_ap_vld;
output  [31:0] global_kNearstId_8_out;
output   global_kNearstId_8_out_ap_vld;
output  [31:0] global_kNearstId_7_out;
output   global_kNearstId_7_out_ap_vld;
output  [31:0] global_kNearstId_6_out;
output   global_kNearstId_6_out_ap_vld;
output  [31:0] global_kNearstId_5_out;
output   global_kNearstId_5_out_ap_vld;
output  [31:0] global_kNearstId_4_out;
output   global_kNearstId_4_out_ap_vld;
output  [31:0] global_kNearstId_3_out;
output   global_kNearstId_3_out_ap_vld;
output  [31:0] global_kNearstId_2_out;
output   global_kNearstId_2_out_ap_vld;
output  [31:0] global_kNearstId_1_out;
output   global_kNearstId_1_out_ap_vld;
output  [31:0] global_kNearstDist_9_out;
output   global_kNearstDist_9_out_ap_vld;
output  [31:0] global_kNearstDist_8_out;
output   global_kNearstDist_8_out_ap_vld;
output  [31:0] global_kNearstDist_7_out;
output   global_kNearstDist_7_out_ap_vld;
output  [31:0] global_kNearstDist_6_out;
output   global_kNearstDist_6_out_ap_vld;
output  [31:0] global_kNearstDist_5_out;
output   global_kNearstDist_5_out_ap_vld;
output  [31:0] global_kNearstDist_4_out;
output   global_kNearstDist_4_out_ap_vld;
output  [31:0] global_kNearstDist_3_out;
output   global_kNearstDist_3_out_ap_vld;
output  [31:0] global_kNearstDist_2_out;
output   global_kNearstDist_2_out_ap_vld;
output  [31:0] global_kNearstDist_1_out;
output   global_kNearstDist_1_out_ap_vld;
output  [31:0] global_kNearstDist_out;
output   global_kNearstDist_out_ap_vld;
output  [31:0] global_kNearstId_out;
output   global_kNearstId_out_ap_vld;

reg ap_idle;
reg global_kNearstId_9_out_ap_vld;
reg global_kNearstId_8_out_ap_vld;
reg global_kNearstId_7_out_ap_vld;
reg global_kNearstId_6_out_ap_vld;
reg global_kNearstId_5_out_ap_vld;
reg global_kNearstId_4_out_ap_vld;
reg global_kNearstId_3_out_ap_vld;
reg global_kNearstId_2_out_ap_vld;
reg global_kNearstId_1_out_ap_vld;
reg global_kNearstDist_9_out_ap_vld;
reg global_kNearstDist_8_out_ap_vld;
reg global_kNearstDist_7_out_ap_vld;
reg global_kNearstDist_6_out_ap_vld;
reg global_kNearstDist_5_out_ap_vld;
reg global_kNearstDist_4_out_ap_vld;
reg global_kNearstDist_3_out_ap_vld;
reg global_kNearstDist_2_out_ap_vld;
reg global_kNearstDist_1_out_ap_vld;
reg global_kNearstDist_out_ap_vld;
reg global_kNearstId_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln526_fu_500_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [3:0] j_fu_136;
wire   [3:0] add_ln526_fu_506_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j_1;
wire   [3:0] j_1_load_fu_497_p1;
reg   [31:0] global_kNearstId_fu_140;
wire   [31:0] global_kNearstId_10_fu_590_p13;
reg   [31:0] global_kNearstDist_fu_144;
wire   [31:0] global_kNearstDist_10_fu_512_p13;
reg   [31:0] global_kNearstDist_1_fu_148;
reg   [31:0] global_kNearstDist_2_fu_152;
reg   [31:0] global_kNearstDist_3_fu_156;
reg   [31:0] global_kNearstDist_4_fu_160;
reg   [31:0] global_kNearstDist_5_fu_164;
reg   [31:0] global_kNearstDist_6_fu_168;
reg   [31:0] global_kNearstDist_7_fu_172;
reg   [31:0] global_kNearstDist_8_fu_176;
reg   [31:0] global_kNearstDist_9_fu_180;
reg   [31:0] global_kNearstId_1_fu_184;
reg   [31:0] global_kNearstId_2_fu_188;
reg   [31:0] global_kNearstId_3_fu_192;
reg   [31:0] global_kNearstId_4_fu_196;
reg   [31:0] global_kNearstId_5_fu_200;
reg   [31:0] global_kNearstId_6_fu_204;
reg   [31:0] global_kNearstId_7_fu_208;
reg   [31:0] global_kNearstId_8_fu_212;
reg   [31:0] global_kNearstId_9_fu_216;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_done_reg = 1'b0;
end

krnl_partialKnn_wrapper_4_mux_114_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_114_32_1_1_U635(
    .din0(local_kNearstDist_reload),
    .din1(local_kNearstDist_1_reload),
    .din2(local_kNearstDist_2_reload),
    .din3(local_kNearstDist_3_reload),
    .din4(local_kNearstDist_4_reload),
    .din5(local_kNearstDist_5_reload),
    .din6(local_kNearstDist_6_reload),
    .din7(local_kNearstDist_7_reload),
    .din8(local_kNearstDist_8_reload),
    .din9(local_kNearstDist_9_reload),
    .din10(local_kNearstDist_10_reload),
    .din11(ap_sig_allocacmp_j_1),
    .dout(global_kNearstDist_10_fu_512_p13)
);

krnl_partialKnn_wrapper_4_mux_114_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_114_32_1_1_U636(
    .din0(local_kNearstId_reload),
    .din1(local_kNearstId_1_reload),
    .din2(local_kNearstId_2_reload),
    .din3(local_kNearstId_3_reload),
    .din4(local_kNearstId_4_reload),
    .din5(local_kNearstId_5_reload),
    .din6(local_kNearstId_6_reload),
    .din7(local_kNearstId_7_reload),
    .din8(local_kNearstId_8_reload),
    .din9(local_kNearstId_9_reload),
    .din10(local_kNearstId_10_reload),
    .din11(ap_sig_allocacmp_j_1),
    .dout(global_kNearstId_10_fu_590_p13)
);

krnl_partialKnn_wrapper_4_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln526_fu_500_p2 == 1'd0)) begin
            j_fu_136 <= add_ln526_fu_506_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_136 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (j_1_load_fu_497_p1 == 4'd2))) begin
        global_kNearstDist_1_fu_148 <= global_kNearstDist_10_fu_512_p13;
        global_kNearstId_3_fu_192 <= global_kNearstId_10_fu_590_p13;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (j_1_load_fu_497_p1 == 4'd3))) begin
        global_kNearstDist_2_fu_152 <= global_kNearstDist_10_fu_512_p13;
        global_kNearstId_4_fu_196 <= global_kNearstId_10_fu_590_p13;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (j_1_load_fu_497_p1 == 4'd4))) begin
        global_kNearstDist_3_fu_156 <= global_kNearstDist_10_fu_512_p13;
        global_kNearstId_5_fu_200 <= global_kNearstId_10_fu_590_p13;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (j_1_load_fu_497_p1 == 4'd5))) begin
        global_kNearstDist_4_fu_160 <= global_kNearstDist_10_fu_512_p13;
        global_kNearstId_6_fu_204 <= global_kNearstId_10_fu_590_p13;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (j_1_load_fu_497_p1 == 4'd6))) begin
        global_kNearstDist_5_fu_164 <= global_kNearstDist_10_fu_512_p13;
        global_kNearstId_7_fu_208 <= global_kNearstId_10_fu_590_p13;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (j_1_load_fu_497_p1 == 4'd7))) begin
        global_kNearstDist_6_fu_168 <= global_kNearstDist_10_fu_512_p13;
        global_kNearstId_8_fu_212 <= global_kNearstId_10_fu_590_p13;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (j_1_load_fu_497_p1 == 4'd8))) begin
        global_kNearstDist_7_fu_172 <= global_kNearstDist_10_fu_512_p13;
        global_kNearstId_9_fu_216 <= global_kNearstId_10_fu_590_p13;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (j_1_load_fu_497_p1 == 4'd9))) begin
        global_kNearstDist_8_fu_176 <= global_kNearstDist_10_fu_512_p13;
        global_kNearstId_1_fu_184 <= global_kNearstId_10_fu_590_p13;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_1_load_fu_497_p1 == 4'd9) & ~(j_1_load_fu_497_p1 == 4'd8) & ~(j_1_load_fu_497_p1 == 4'd7) & ~(j_1_load_fu_497_p1 == 4'd6) & ~(j_1_load_fu_497_p1 == 4'd5) & ~(j_1_load_fu_497_p1 == 4'd4) & ~(j_1_load_fu_497_p1 == 4'd3) & ~(j_1_load_fu_497_p1 == 4'd2) & ~(j_1_load_fu_497_p1 == 4'd1) & ~(j_1_load_fu_497_p1 == 4'd0) & (ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstDist_9_fu_180 <= global_kNearstDist_10_fu_512_p13;
        global_kNearstId_fu_140 <= global_kNearstId_10_fu_590_p13;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (j_1_load_fu_497_p1 == 4'd1))) begin
        global_kNearstDist_fu_144 <= global_kNearstDist_10_fu_512_p13;
        global_kNearstId_2_fu_188 <= global_kNearstId_10_fu_590_p13;
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_j_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_j_1 = j_fu_136;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstDist_1_out_ap_vld = 1'b1;
    end else begin
        global_kNearstDist_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstDist_2_out_ap_vld = 1'b1;
    end else begin
        global_kNearstDist_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstDist_3_out_ap_vld = 1'b1;
    end else begin
        global_kNearstDist_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstDist_4_out_ap_vld = 1'b1;
    end else begin
        global_kNearstDist_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstDist_5_out_ap_vld = 1'b1;
    end else begin
        global_kNearstDist_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstDist_6_out_ap_vld = 1'b1;
    end else begin
        global_kNearstDist_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstDist_7_out_ap_vld = 1'b1;
    end else begin
        global_kNearstDist_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstDist_8_out_ap_vld = 1'b1;
    end else begin
        global_kNearstDist_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstDist_9_out_ap_vld = 1'b1;
    end else begin
        global_kNearstDist_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstDist_out_ap_vld = 1'b1;
    end else begin
        global_kNearstDist_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstId_1_out_ap_vld = 1'b1;
    end else begin
        global_kNearstId_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstId_2_out_ap_vld = 1'b1;
    end else begin
        global_kNearstId_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstId_3_out_ap_vld = 1'b1;
    end else begin
        global_kNearstId_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstId_4_out_ap_vld = 1'b1;
    end else begin
        global_kNearstId_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstId_5_out_ap_vld = 1'b1;
    end else begin
        global_kNearstId_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstId_6_out_ap_vld = 1'b1;
    end else begin
        global_kNearstId_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstId_7_out_ap_vld = 1'b1;
    end else begin
        global_kNearstId_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstId_8_out_ap_vld = 1'b1;
    end else begin
        global_kNearstId_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstId_9_out_ap_vld = 1'b1;
    end else begin
        global_kNearstId_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln526_fu_500_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_kNearstId_out_ap_vld = 1'b1;
    end else begin
        global_kNearstId_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln526_fu_506_p2 = (ap_sig_allocacmp_j_1 + 4'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign global_kNearstDist_1_out = global_kNearstDist_1_fu_148;

assign global_kNearstDist_2_out = global_kNearstDist_2_fu_152;

assign global_kNearstDist_3_out = global_kNearstDist_3_fu_156;

assign global_kNearstDist_4_out = global_kNearstDist_4_fu_160;

assign global_kNearstDist_5_out = global_kNearstDist_5_fu_164;

assign global_kNearstDist_6_out = global_kNearstDist_6_fu_168;

assign global_kNearstDist_7_out = global_kNearstDist_7_fu_172;

assign global_kNearstDist_8_out = global_kNearstDist_8_fu_176;

assign global_kNearstDist_9_out = global_kNearstDist_9_fu_180;

assign global_kNearstDist_out = global_kNearstDist_fu_144;

assign global_kNearstId_1_out = global_kNearstId_1_fu_184;

assign global_kNearstId_2_out = global_kNearstId_2_fu_188;

assign global_kNearstId_3_out = global_kNearstId_3_fu_192;

assign global_kNearstId_4_out = global_kNearstId_4_fu_196;

assign global_kNearstId_5_out = global_kNearstId_5_fu_200;

assign global_kNearstId_6_out = global_kNearstId_6_fu_204;

assign global_kNearstId_7_out = global_kNearstId_7_fu_208;

assign global_kNearstId_8_out = global_kNearstId_8_fu_212;

assign global_kNearstId_9_out = global_kNearstId_9_fu_216;

assign global_kNearstId_out = global_kNearstId_fu_140;

assign icmp_ln526_fu_500_p2 = ((ap_sig_allocacmp_j_1 == 4'd11) ? 1'b1 : 1'b0);

assign j_1_load_fu_497_p1 = ap_sig_allocacmp_j_1;

endmodule //krnl_partialKnn_wrapper_4_krnl_partialKnn_wrapper_4_Pipeline_VITIS_LOOP_526_14
