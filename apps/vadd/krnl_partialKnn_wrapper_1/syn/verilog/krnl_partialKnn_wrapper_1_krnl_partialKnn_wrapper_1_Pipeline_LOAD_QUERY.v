// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module krnl_partialKnn_wrapper_1_krnl_partialKnn_wrapper_1_Pipeline_LOAD_QUERY (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        searchSpace_0_read_data_s_dout,
        searchSpace_0_read_data_s_empty_n,
        searchSpace_0_read_data_s_read,
        searchSpace_0_read_addr_din,
        searchSpace_0_read_addr_full_n,
        searchSpace_0_read_addr_write,
        local_Query_0_1_out,
        local_Query_0_1_out_ap_vld,
        local_Query_0_out,
        local_Query_0_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [256:0] searchSpace_0_read_data_s_dout;
input   searchSpace_0_read_data_s_empty_n;
output   searchSpace_0_read_data_s_read;
output  [64:0] searchSpace_0_read_addr_din;
input   searchSpace_0_read_addr_full_n;
output   searchSpace_0_read_addr_write;
output  [31:0] local_Query_0_1_out;
output   local_Query_0_1_out_ap_vld;
output  [31:0] local_Query_0_out;
output   local_Query_0_out_ap_vld;

reg ap_idle;
reg searchSpace_0_read_data_s_read;
reg searchSpace_0_read_addr_write;
reg local_Query_0_1_out_ap_vld;
reg local_Query_0_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln396_fu_138_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] i_resp_4_reg_407;
wire    ap_block_pp0_stage0_11001;
wire   [2:0] trunc_ln396_fu_124_p1;
reg   [2:0] trunc_ln396_reg_413;
wire   [0:0] tmp_7_nbreadreq_fu_76_p3;
reg   [0:0] tmp_7_reg_421;
reg   [256:0] searchSpace_0_read_data_s_read_reg_425_1;
wire   [2:0] sub_ln407_fu_144_p2;
reg   [2:0] sub_ln407_reg_430;
reg   [31:0] i_req_fu_60;
wire   [31:0] select_ln400_fu_255_p3;
wire   [0:0] icmp_ln400_fu_230_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [31:0] i_resp_fu_64;
wire   [31:0] i_resp_5_fu_150_p2;
reg   [31:0] ap_sig_allocacmp_i_resp_4;
reg   [31:0] local_Query_0_fu_68;
wire   [31:0] local_Query_0_3_fu_353_p3;
reg   [31:0] local_Query_0_1_fu_72;
wire   [31:0] local_Query_0_2_fu_345_p3;
wire    ap_block_pp0_stage0_01001;
wire   [30:0] tmp_fu_128_p4;
wire   [31:0] sub_ln399_fu_172_p2;
wire   [28:0] trunc_ln399_1_fu_178_p4;
wire   [29:0] zext_ln399_fu_188_p1;
wire   [28:0] trunc_ln399_2_fu_198_p4;
wire   [0:0] tmp_5_fu_164_p3;
wire   [29:0] sub_ln399_1_fu_192_p2;
wire   [29:0] zext_ln399_1_fu_208_p1;
wire   [30:0] tmp_8_fu_220_p4;
wire   [29:0] input_rd_idx_fu_212_p3;
wire  signed [63:0] sext_ln400_fu_236_p1;
wire   [0:0] select_ln400_fu_255_p0;
wire   [31:0] add_ln401_fu_249_p2;
wire   [3:0] p_and_t_fu_288_p3;
wire   [4:0] zext_ln407_fu_295_p1;
wire   [4:0] sub_ln407_1_fu_299_p2;
wire   [0:0] tmp_9_fu_281_p3;
wire   [2:0] trunc_ln407_fu_305_p1;
wire   [2:0] select_ln407_fu_309_p3;
wire   [7:0] tmp_10_fu_316_p3;
wire   [255:0] elem_val_V_fu_277_p1;
wire   [255:0] zext_ln674_fu_324_p1;
wire   [255:0] lshr_ln674_fu_328_p2;
wire   [31:0] tmp_11_fu_334_p1;
wire   [0:0] trunc_ln412_fu_342_p1;
wire   [31:0] bitcast_ln412_fu_338_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_311;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

krnl_partialKnn_wrapper_1_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_req_fu_60 <= 32'd0;
        end else if (((icmp_ln400_fu_230_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_req_fu_60 <= select_ln400_fu_255_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((1'b1 == ap_condition_311)) begin
            i_resp_fu_64 <= i_resp_5_fu_150_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_resp_fu_64 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_resp_4_reg_407 <= ap_sig_allocacmp_i_resp_4;
        trunc_ln396_reg_413 <= trunc_ln396_fu_124_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_7_reg_421 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_Query_0_1_fu_72 <= local_Query_0_2_fu_345_p3;
        local_Query_0_fu_68 <= local_Query_0_3_fu_353_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_7_nbreadreq_fu_76_p3 == 1'd1) & (icmp_ln396_fu_138_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        searchSpace_0_read_data_s_read_reg_425_1 <= searchSpace_0_read_data_s_dout;
        sub_ln407_reg_430 <= sub_ln407_fu_144_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln396_fu_138_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_7_reg_421 <= tmp_7_nbreadreq_fu_76_p3;
    end
end

always @ (*) begin
    if (((icmp_ln396_fu_138_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_resp_4 = 32'd0;
    end else begin
        ap_sig_allocacmp_i_resp_4 = i_resp_fu_64;
    end
end

always @ (*) begin
    if (((icmp_ln396_fu_138_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_Query_0_1_out_ap_vld = 1'b1;
    end else begin
        local_Query_0_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln396_fu_138_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_Query_0_out_ap_vld = 1'b1;
    end else begin
        local_Query_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln400_fu_230_p2 == 1'd1) & (searchSpace_0_read_addr_full_n == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        searchSpace_0_read_addr_write = 1'b1;
    end else begin
        searchSpace_0_read_addr_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_7_nbreadreq_fu_76_p3 == 1'd1) & (searchSpace_0_read_data_s_empty_n == 1'b1) & (icmp_ln396_fu_138_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        searchSpace_0_read_data_s_read = 1'b1;
    end else begin
        searchSpace_0_read_data_s_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln401_fu_249_p2 = (i_req_fu_60 + 32'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_311 = ((tmp_7_nbreadreq_fu_76_p3 == 1'd1) & (icmp_ln396_fu_138_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln412_fu_338_p1 = tmp_11_fu_334_p1;

assign elem_val_V_fu_277_p1 = searchSpace_0_read_data_s_read_reg_425_1[255:0];

assign i_resp_5_fu_150_p2 = (ap_sig_allocacmp_i_resp_4 + 32'd1);

assign icmp_ln396_fu_138_p2 = (($signed(tmp_fu_128_p4) < $signed(31'd1)) ? 1'b1 : 1'b0);

assign icmp_ln400_fu_230_p2 = (($signed(tmp_8_fu_220_p4) < $signed(31'd1)) ? 1'b1 : 1'b0);

assign input_rd_idx_fu_212_p3 = ((tmp_5_fu_164_p3[0:0] == 1'b1) ? sub_ln399_1_fu_192_p2 : zext_ln399_1_fu_208_p1);

assign local_Query_0_1_out = local_Query_0_1_fu_72;

assign local_Query_0_2_fu_345_p3 = ((trunc_ln412_fu_342_p1[0:0] == 1'b1) ? local_Query_0_1_fu_72 : bitcast_ln412_fu_338_p1);

assign local_Query_0_3_fu_353_p3 = ((trunc_ln412_fu_342_p1[0:0] == 1'b1) ? bitcast_ln412_fu_338_p1 : local_Query_0_fu_68);

assign local_Query_0_out = local_Query_0_fu_68;

assign lshr_ln674_fu_328_p2 = elem_val_V_fu_277_p1 >> zext_ln674_fu_324_p1;

assign p_and_t_fu_288_p3 = {{1'd0}, {sub_ln407_reg_430}};

assign searchSpace_0_read_addr_din = {{1'd0}, {sext_ln400_fu_236_p1}};

assign select_ln400_fu_255_p0 = searchSpace_0_read_addr_full_n;

assign select_ln400_fu_255_p3 = ((select_ln400_fu_255_p0[0:0] == 1'b1) ? add_ln401_fu_249_p2 : i_req_fu_60);

assign select_ln407_fu_309_p3 = ((tmp_9_fu_281_p3[0:0] == 1'b1) ? trunc_ln407_fu_305_p1 : trunc_ln396_reg_413);

assign sext_ln400_fu_236_p1 = $signed(input_rd_idx_fu_212_p3);

assign sub_ln399_1_fu_192_p2 = (30'd0 - zext_ln399_fu_188_p1);

assign sub_ln399_fu_172_p2 = (32'd0 - i_req_fu_60);

assign sub_ln407_1_fu_299_p2 = (5'd0 - zext_ln407_fu_295_p1);

assign sub_ln407_fu_144_p2 = (3'd0 - trunc_ln396_fu_124_p1);

assign tmp_10_fu_316_p3 = {{select_ln407_fu_309_p3}, {5'd0}};

assign tmp_11_fu_334_p1 = lshr_ln674_fu_328_p2[31:0];

assign tmp_5_fu_164_p3 = i_req_fu_60[32'd31];

assign tmp_7_nbreadreq_fu_76_p3 = searchSpace_0_read_data_s_empty_n;

assign tmp_8_fu_220_p4 = {{i_req_fu_60[31:1]}};

assign tmp_9_fu_281_p3 = i_resp_4_reg_407[32'd31];

assign tmp_fu_128_p4 = {{ap_sig_allocacmp_i_resp_4[31:1]}};

assign trunc_ln396_fu_124_p1 = ap_sig_allocacmp_i_resp_4[2:0];

assign trunc_ln399_1_fu_178_p4 = {{sub_ln399_fu_172_p2[31:3]}};

assign trunc_ln399_2_fu_198_p4 = {{i_req_fu_60[31:3]}};

assign trunc_ln407_fu_305_p1 = sub_ln407_1_fu_299_p2[2:0];

assign trunc_ln412_fu_342_p1 = i_resp_4_reg_407[0:0];

assign zext_ln399_1_fu_208_p1 = trunc_ln399_2_fu_198_p4;

assign zext_ln399_fu_188_p1 = trunc_ln399_1_fu_178_p4;

assign zext_ln407_fu_295_p1 = p_and_t_fu_288_p3;

assign zext_ln674_fu_324_p1 = tmp_10_fu_316_p3;

endmodule //krnl_partialKnn_wrapper_1_krnl_partialKnn_wrapper_1_Pipeline_LOAD_QUERY
