-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity krnl_partialKnn_wrapper_8_krnl_partialKnn_wrapper_8_Pipeline_VITIS_LOOP_526_14 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    local_kNearstId_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstId_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstId_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstId_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstId_4_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstId_5_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstId_6_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstId_7_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstId_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstId_9_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstId_10_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstDist_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstDist_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstDist_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstDist_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstDist_4_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstDist_5_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstDist_6_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstDist_7_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstDist_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstDist_9_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    local_kNearstDist_10_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstId_9_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstId_9_out_ap_vld : OUT STD_LOGIC;
    global_kNearstId_8_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstId_8_out_ap_vld : OUT STD_LOGIC;
    global_kNearstId_7_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstId_7_out_ap_vld : OUT STD_LOGIC;
    global_kNearstId_6_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstId_6_out_ap_vld : OUT STD_LOGIC;
    global_kNearstId_5_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstId_5_out_ap_vld : OUT STD_LOGIC;
    global_kNearstId_4_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstId_4_out_ap_vld : OUT STD_LOGIC;
    global_kNearstId_3_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstId_3_out_ap_vld : OUT STD_LOGIC;
    global_kNearstId_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstId_2_out_ap_vld : OUT STD_LOGIC;
    global_kNearstId_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstId_1_out_ap_vld : OUT STD_LOGIC;
    global_kNearstDist_9_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstDist_9_out_ap_vld : OUT STD_LOGIC;
    global_kNearstDist_8_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstDist_8_out_ap_vld : OUT STD_LOGIC;
    global_kNearstDist_7_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstDist_7_out_ap_vld : OUT STD_LOGIC;
    global_kNearstDist_6_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstDist_6_out_ap_vld : OUT STD_LOGIC;
    global_kNearstDist_5_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstDist_5_out_ap_vld : OUT STD_LOGIC;
    global_kNearstDist_4_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstDist_4_out_ap_vld : OUT STD_LOGIC;
    global_kNearstDist_3_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstDist_3_out_ap_vld : OUT STD_LOGIC;
    global_kNearstDist_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstDist_2_out_ap_vld : OUT STD_LOGIC;
    global_kNearstDist_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstDist_1_out_ap_vld : OUT STD_LOGIC;
    global_kNearstDist_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstDist_out_ap_vld : OUT STD_LOGIC;
    global_kNearstId_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    global_kNearstId_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of krnl_partialKnn_wrapper_8_krnl_partialKnn_wrapper_8_Pipeline_VITIS_LOOP_526_14 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln526_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal j_fu_136 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln526_fu_506_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_1_load_fu_497_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal global_kNearstId_fu_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstId_10_fu_590_p13 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstDist_fu_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstDist_10_fu_512_p13 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstDist_1_fu_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstDist_2_fu_152 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstDist_3_fu_156 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstDist_4_fu_160 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstDist_5_fu_164 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstDist_6_fu_168 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstDist_7_fu_172 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstDist_8_fu_176 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstDist_9_fu_180 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstId_1_fu_184 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstId_2_fu_188 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstId_3_fu_192 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstId_4_fu_196 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstId_5_fu_200 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstId_6_fu_204 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstId_7_fu_208 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstId_8_fu_212 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_kNearstId_9_fu_216 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component krnl_partialKnn_wrapper_8_mux_114_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component krnl_partialKnn_wrapper_8_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_114_32_1_1_U635 : component krnl_partialKnn_wrapper_8_mux_114_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => local_kNearstDist_reload,
        din1 => local_kNearstDist_1_reload,
        din2 => local_kNearstDist_2_reload,
        din3 => local_kNearstDist_3_reload,
        din4 => local_kNearstDist_4_reload,
        din5 => local_kNearstDist_5_reload,
        din6 => local_kNearstDist_6_reload,
        din7 => local_kNearstDist_7_reload,
        din8 => local_kNearstDist_8_reload,
        din9 => local_kNearstDist_9_reload,
        din10 => local_kNearstDist_10_reload,
        din11 => ap_sig_allocacmp_j_1,
        dout => global_kNearstDist_10_fu_512_p13);

    mux_114_32_1_1_U636 : component krnl_partialKnn_wrapper_8_mux_114_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => local_kNearstId_reload,
        din1 => local_kNearstId_1_reload,
        din2 => local_kNearstId_2_reload,
        din3 => local_kNearstId_3_reload,
        din4 => local_kNearstId_4_reload,
        din5 => local_kNearstId_5_reload,
        din6 => local_kNearstId_6_reload,
        din7 => local_kNearstId_7_reload,
        din8 => local_kNearstId_8_reload,
        din9 => local_kNearstId_9_reload,
        din10 => local_kNearstId_10_reload,
        din11 => ap_sig_allocacmp_j_1,
        dout => global_kNearstId_10_fu_590_p13);

    flow_control_loop_pipe_sequential_init_U : component krnl_partialKnn_wrapper_8_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_start_int = ap_const_logic_1) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    j_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if ((icmp_ln526_fu_500_p2 = ap_const_lv1_0)) then 
                    j_fu_136 <= add_ln526_fu_506_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_136 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (j_1_load_fu_497_p1 = ap_const_lv4_2))) then
                global_kNearstDist_1_fu_148 <= global_kNearstDist_10_fu_512_p13;
                global_kNearstId_3_fu_192 <= global_kNearstId_10_fu_590_p13;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (j_1_load_fu_497_p1 = ap_const_lv4_3))) then
                global_kNearstDist_2_fu_152 <= global_kNearstDist_10_fu_512_p13;
                global_kNearstId_4_fu_196 <= global_kNearstId_10_fu_590_p13;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (j_1_load_fu_497_p1 = ap_const_lv4_4))) then
                global_kNearstDist_3_fu_156 <= global_kNearstDist_10_fu_512_p13;
                global_kNearstId_5_fu_200 <= global_kNearstId_10_fu_590_p13;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (j_1_load_fu_497_p1 = ap_const_lv4_5))) then
                global_kNearstDist_4_fu_160 <= global_kNearstDist_10_fu_512_p13;
                global_kNearstId_6_fu_204 <= global_kNearstId_10_fu_590_p13;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (j_1_load_fu_497_p1 = ap_const_lv4_6))) then
                global_kNearstDist_5_fu_164 <= global_kNearstDist_10_fu_512_p13;
                global_kNearstId_7_fu_208 <= global_kNearstId_10_fu_590_p13;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (j_1_load_fu_497_p1 = ap_const_lv4_7))) then
                global_kNearstDist_6_fu_168 <= global_kNearstDist_10_fu_512_p13;
                global_kNearstId_8_fu_212 <= global_kNearstId_10_fu_590_p13;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (j_1_load_fu_497_p1 = ap_const_lv4_8))) then
                global_kNearstDist_7_fu_172 <= global_kNearstDist_10_fu_512_p13;
                global_kNearstId_9_fu_216 <= global_kNearstId_10_fu_590_p13;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (j_1_load_fu_497_p1 = ap_const_lv4_9))) then
                global_kNearstDist_8_fu_176 <= global_kNearstDist_10_fu_512_p13;
                global_kNearstId_1_fu_184 <= global_kNearstId_10_fu_590_p13;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((j_1_load_fu_497_p1 = ap_const_lv4_9)) and not((j_1_load_fu_497_p1 = ap_const_lv4_8)) and not((j_1_load_fu_497_p1 = ap_const_lv4_7)) and not((j_1_load_fu_497_p1 = ap_const_lv4_6)) and not((j_1_load_fu_497_p1 = ap_const_lv4_5)) and not((j_1_load_fu_497_p1 = ap_const_lv4_4)) and not((j_1_load_fu_497_p1 = ap_const_lv4_3)) and not((j_1_load_fu_497_p1 = ap_const_lv4_2)) and not((j_1_load_fu_497_p1 = ap_const_lv4_1)) and not((j_1_load_fu_497_p1 = ap_const_lv4_0)) and (ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                global_kNearstDist_9_fu_180 <= global_kNearstDist_10_fu_512_p13;
                global_kNearstId_fu_140 <= global_kNearstId_10_fu_590_p13;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (j_1_load_fu_497_p1 = ap_const_lv4_1))) then
                global_kNearstDist_fu_144 <= global_kNearstDist_10_fu_512_p13;
                global_kNearstId_2_fu_188 <= global_kNearstId_10_fu_590_p13;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln526_fu_506_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_1) + unsigned(ap_const_lv4_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start_int)
    begin
        if ((ap_start_int = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_state1, ap_loop_exit_ready, ap_done_reg, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_1_assign_proc : process(ap_CS_fsm_state1, j_fu_136, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_j_1 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_j_1 <= j_fu_136;
        end if; 
    end process;

    global_kNearstDist_1_out <= global_kNearstDist_1_fu_148;

    global_kNearstDist_1_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstDist_1_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstDist_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    global_kNearstDist_2_out <= global_kNearstDist_2_fu_152;

    global_kNearstDist_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstDist_2_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstDist_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    global_kNearstDist_3_out <= global_kNearstDist_3_fu_156;

    global_kNearstDist_3_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstDist_3_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstDist_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    global_kNearstDist_4_out <= global_kNearstDist_4_fu_160;

    global_kNearstDist_4_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstDist_4_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstDist_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    global_kNearstDist_5_out <= global_kNearstDist_5_fu_164;

    global_kNearstDist_5_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstDist_5_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstDist_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    global_kNearstDist_6_out <= global_kNearstDist_6_fu_168;

    global_kNearstDist_6_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstDist_6_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstDist_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    global_kNearstDist_7_out <= global_kNearstDist_7_fu_172;

    global_kNearstDist_7_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstDist_7_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstDist_7_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    global_kNearstDist_8_out <= global_kNearstDist_8_fu_176;

    global_kNearstDist_8_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstDist_8_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstDist_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    global_kNearstDist_9_out <= global_kNearstDist_9_fu_180;

    global_kNearstDist_9_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstDist_9_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstDist_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    global_kNearstDist_out <= global_kNearstDist_fu_144;

    global_kNearstDist_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstDist_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstDist_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    global_kNearstId_1_out <= global_kNearstId_1_fu_184;

    global_kNearstId_1_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstId_1_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstId_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    global_kNearstId_2_out <= global_kNearstId_2_fu_188;

    global_kNearstId_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstId_2_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstId_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    global_kNearstId_3_out <= global_kNearstId_3_fu_192;

    global_kNearstId_3_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstId_3_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstId_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    global_kNearstId_4_out <= global_kNearstId_4_fu_196;

    global_kNearstId_4_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstId_4_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstId_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    global_kNearstId_5_out <= global_kNearstId_5_fu_200;

    global_kNearstId_5_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstId_5_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstId_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    global_kNearstId_6_out <= global_kNearstId_6_fu_204;

    global_kNearstId_6_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstId_6_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstId_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    global_kNearstId_7_out <= global_kNearstId_7_fu_208;

    global_kNearstId_7_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstId_7_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstId_7_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    global_kNearstId_8_out <= global_kNearstId_8_fu_212;

    global_kNearstId_8_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstId_8_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstId_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    global_kNearstId_9_out <= global_kNearstId_9_fu_216;

    global_kNearstId_9_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstId_9_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstId_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    global_kNearstId_out <= global_kNearstId_fu_140;

    global_kNearstId_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, icmp_ln526_fu_500_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln526_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_kNearstId_out_ap_vld <= ap_const_logic_1;
        else 
            global_kNearstId_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln526_fu_500_p2 <= "1" when (ap_sig_allocacmp_j_1 = ap_const_lv4_B) else "0";
    j_1_load_fu_497_p1 <= ap_sig_allocacmp_j_1;
end behav;
