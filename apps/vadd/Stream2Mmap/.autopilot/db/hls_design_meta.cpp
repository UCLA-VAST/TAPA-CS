#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("m_axi_mmap_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_mmap_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_mmap_AWADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_mmap_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_mmap_AWLEN", 8, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_mmap_AWSIZE", 3, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_mmap_AWBURST", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_mmap_AWLOCK", 2, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_mmap_AWCACHE", 4, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_mmap_AWPROT", 3, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_mmap_AWQOS", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_mmap_AWREGION", 4, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_mmap_AWUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_mmap_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_mmap_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_mmap_WDATA", 32, hls_out, 0, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_mmap_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_mmap_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_mmap_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_mmap_WUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_mmap_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_mmap_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_mmap_ARADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_mmap_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_mmap_ARLEN", 8, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_mmap_ARSIZE", 3, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_mmap_ARBURST", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_mmap_ARLOCK", 2, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_mmap_ARCACHE", 4, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_mmap_ARPROT", 3, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_mmap_ARQOS", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_mmap_ARREGION", 4, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_mmap_ARUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_mmap_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_mmap_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_mmap_RDATA", 32, hls_in, 0, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_mmap_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_mmap_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_mmap_RUSER", 1, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_mmap_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_mmap_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_mmap_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_mmap_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_mmap_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_mmap_BUSER", 1, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("stream_s_dout", 33, hls_in, 1, "ap_fifo", "fifo_port_we", 2),
	Port_Property("stream_s_empty_n", 1, hls_in, 1, "ap_fifo", "fifo_status", 2),
	Port_Property("stream_s_read", 1, hls_out, 1, "ap_fifo", "fifo_data", 2),
	Port_Property("stream_peek_dout", 33, hls_in, 2, "ap_fifo", "fifo_port_we", 1),
	Port_Property("stream_peek_empty_n", 1, hls_in, 2, "ap_fifo", "fifo_status", 1),
	Port_Property("stream_peek_read", 1, hls_out, 2, "ap_fifo", "fifo_data", 1),
	Port_Property("mmap_offset", 64, hls_in, 3, "ap_none", "in_data", 1),
	Port_Property("n", 64, hls_in, 4, "ap_none", "in_data", 1),
};
const char* HLS_Design_Meta::dut_name = "Stream2Mmap";
