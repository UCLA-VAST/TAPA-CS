puts "applying partitioning constraints generated by tapac"
write_checkpoint before_add_floorplan_constraints.dcp

# begin defining a slot
create_pblock CR_X0Y0_To_CR_X3Y3
resize_pblock CR_X0Y0_To_CR_X3Y3 -add CLOCKREGION_X0Y0:CLOCKREGION_X3Y3
# remove the reserved clock regions for the Vitis infra
resize_pblock CR_X0Y0_To_CR_X3Y3 -remove CLOCKREGION_X7Y1:CLOCKREGION_X7Y11

add_cells_to_pblock [get_pblocks pblock_dynamic_SLR0] [get_cells -regex {
  pfm_top_i/dynamic_region/.*/inst/.*/control_s_axi_U_slr_0
  pfm_top_i/dynamic_region/.*/inst/.*/tapa_state.*
} ]
add_cells_to_pblock [get_pblocks pblock_dynamic_SLR1] [get_cells -regex {
  pfm_top_i/dynamic_region/.*/inst/.*/control_s_axi_U_slr_1
} ]
add_cells_to_pblock [get_pblocks pblock_dynamic_SLR2] [get_cells -regex {
  pfm_top_i/dynamic_region/.*/inst/.*/control_s_axi_U_slr_2
} ]
add_cells_to_pblock [get_pblocks CR_X0Y0_To_CR_X3Y3] [get_cells -regex {
  pfm_top_i/dynamic_region/.*/inst/.*/Mmap2Stream_0
  pfm_top_i/dynamic_region/.*/inst/.*/Mmap2Stream_0__state.*
  pfm_top_i/dynamic_region/.*/inst/.*/Module0Func_0
  pfm_top_i/dynamic_region/.*/inst/.*/Module0Func_0__state.*
  pfm_top_i/dynamic_region/.*/inst/.*/Module1Func_0
  pfm_top_i/dynamic_region/.*/inst/.*/Module1Func_0__state.*
  pfm_top_i/dynamic_region/.*/inst/.*/Module1Func_1
  pfm_top_i/dynamic_region/.*/inst/.*/Module1Func_1__state.*
  pfm_top_i/dynamic_region/.*/inst/.*/Module1Func_2
  pfm_top_i/dynamic_region/.*/inst/.*/Module1Func_2__state.*
  pfm_top_i/dynamic_region/.*/inst/.*/Module1Func_3
  pfm_top_i/dynamic_region/.*/inst/.*/Module1Func_3__state.*
  pfm_top_i/dynamic_region/.*/inst/.*/Module1Func_4
  pfm_top_i/dynamic_region/.*/inst/.*/Module1Func_4__state.*
  pfm_top_i/dynamic_region/.*/inst/.*/Module1Func_5
  pfm_top_i/dynamic_region/.*/inst/.*/Module1Func_5__state.*
  pfm_top_i/dynamic_region/.*/inst/.*/Module3Func1_0
  pfm_top_i/dynamic_region/.*/inst/.*/Module3Func1_0__state.*
  pfm_top_i/dynamic_region/.*/inst/.*/Module3Func2_0
  pfm_top_i/dynamic_region/.*/inst/.*/Module3Func2_0__state.*
  pfm_top_i/dynamic_region/.*/inst/.*/Module6Func1_0
  pfm_top_i/dynamic_region/.*/inst/.*/Module6Func1_0__state.*
  pfm_top_i/dynamic_region/.*/inst/.*/Module6Func2_0
  pfm_top_i/dynamic_region/.*/inst/.*/Module6Func2_0__state.*
  pfm_top_i/dynamic_region/.*/inst/.*/Module8Func_0
  pfm_top_i/dynamic_region/.*/inst/.*/Module8Func_0__state.*
  pfm_top_i/dynamic_region/.*/inst/.*/Stream2Mmap_0
  pfm_top_i/dynamic_region/.*/inst/.*/Stream2Mmap_0__state.*
  pfm_top_i/dynamic_region/.*/inst/.*/bank_0_t0_buf/.*.unit
  pfm_top_i/dynamic_region/.*/inst/.*/bank_0_t1_buf/.*.unit
  pfm_top_i/dynamic_region/.*/inst/.*/from_super_source_to_t1_offset_0/.*.unit
  pfm_top_i/dynamic_region/.*/inst/.*/from_super_source_to_t1_offset_1/.*.unit
  pfm_top_i/dynamic_region/.*/inst/.*/from_t0_pe_0_to_super_sink/.*.unit
  pfm_top_i/dynamic_region/.*/inst/.*/from_t0_pe_1_to_super_sink/.*.unit
  pfm_top_i/dynamic_region/.*/inst/.*/from_t1_offset_0_to_t1_offset_2000/.*.unit
  pfm_top_i/dynamic_region/.*/inst/.*/from_t1_offset_0_to_tcse_var_0_pe_1/.*.unit
  pfm_top_i/dynamic_region/.*/inst/.*/from_t1_offset_1_to_t1_offset_2001/.*.unit
  pfm_top_i/dynamic_region/.*/inst/.*/from_t1_offset_1_to_tcse_var_0_pe_0/.*.unit
  pfm_top_i/dynamic_region/.*/inst/.*/from_t1_offset_2000_to_t0_pe_1/.*.unit
  pfm_top_i/dynamic_region/.*/inst/.*/from_t1_offset_2000_to_tcse_var_0_pe_0/.*.unit
  pfm_top_i/dynamic_region/.*/inst/.*/from_t1_offset_2001_to_t0_pe_0/.*.unit
  pfm_top_i/dynamic_region/.*/inst/.*/from_t1_offset_2001_to_tcse_var_0_pe_1/.*.unit
  pfm_top_i/dynamic_region/.*/inst/.*/from_tcse_var_0_offset_0_to_t0_pe_0/.*.unit
  pfm_top_i/dynamic_region/.*/inst/.*/from_tcse_var_0_offset_0_to_t0_pe_1/.*.unit
  pfm_top_i/dynamic_region/.*/inst/.*/from_tcse_var_0_offset_1_to_t0_pe_0/.*.unit
  pfm_top_i/dynamic_region/.*/inst/.*/from_tcse_var_0_offset_1_to_t0_pe_1/.*.unit
  pfm_top_i/dynamic_region/.*/inst/.*/from_tcse_var_0_pe_0_to_tcse_var_0_offset_1/.*.unit
  pfm_top_i/dynamic_region/.*/inst/.*/from_tcse_var_0_pe_1_to_tcse_var_0_offset_0/.*.unit
} ]
foreach pblock [get_pblocks -regexp CR_X\\d+Y\\d+_To_CR_X\\d+Y\\d+] {
  if {[get_property CELL_COUNT $pblock] == 0} {
    puts "WARNING: delete empty pblock $pblock "
    delete_pblocks $pblock
  }
}
foreach pblock [get_pblocks] {
  report_utilization -pblocks $pblock
}