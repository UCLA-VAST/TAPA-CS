// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Module6Func2_Module6Func2_Pipeline_module_6_2_epoch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_st_0_din,
        fifo_st_0_full_n,
        fifo_st_0_write,
        fifo_ld_0_s_dout,
        fifo_ld_0_s_empty_n,
        fifo_ld_0_s_read,
        fifo_ld_2_s_dout,
        fifo_ld_2_s_empty_n,
        fifo_ld_2_s_read,
        fifo_ld_1_s_dout,
        fifo_ld_1_s_empty_n,
        fifo_ld_1_s_read,
        fifo_ld_0_peek_dout,
        fifo_ld_0_peek_empty_n,
        fifo_ld_0_peek_read,
        fifo_ld_1_peek_dout,
        fifo_ld_1_peek_empty_n,
        fifo_ld_1_peek_read,
        fifo_ld_2_peek_dout,
        fifo_ld_2_peek_empty_n,
        fifo_ld_2_peek_read
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [32:0] fifo_st_0_din;
input   fifo_st_0_full_n;
output   fifo_st_0_write;
input  [32:0] fifo_ld_0_s_dout;
input   fifo_ld_0_s_empty_n;
output   fifo_ld_0_s_read;
input  [32:0] fifo_ld_2_s_dout;
input   fifo_ld_2_s_empty_n;
output   fifo_ld_2_s_read;
input  [32:0] fifo_ld_1_s_dout;
input   fifo_ld_1_s_empty_n;
output   fifo_ld_1_s_read;
input  [32:0] fifo_ld_0_peek_dout;
input   fifo_ld_0_peek_empty_n;
output   fifo_ld_0_peek_read;
input  [32:0] fifo_ld_1_peek_dout;
input   fifo_ld_1_peek_empty_n;
output   fifo_ld_1_peek_read;
input  [32:0] fifo_ld_2_peek_dout;
input   fifo_ld_2_peek_empty_n;
output   fifo_ld_2_peek_read;

reg ap_idle;
reg fifo_st_0_write;
reg fifo_ld_0_s_read;
reg fifo_ld_2_s_read;
reg fifo_ld_1_s_read;
reg fifo_ld_0_peek_read;
reg fifo_ld_1_peek_read;
reg fifo_ld_2_peek_read;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
reg   [0:0] or_ln66_3_reg_471;
reg   [0:0] or_ln66_3_reg_471_pp0_iter15_reg;
reg    ap_block_state17_pp0_stage0_iter16;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] or_ln66_1_fu_325_p2;
wire   [0:0] and_ln66_fu_289_p2;
wire   [0:0] or_ln66_fu_265_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fifo_st_0_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] tmp_nbreadreq_fu_62_p3;
reg   [0:0] or_ln66_reg_451;
wire   [0:0] tmp_3_nbreadreq_fu_76_p3;
reg   [0:0] and_ln66_reg_459;
wire   [0:0] tmp_6_nbreadreq_fu_90_p3;
reg   [0:0] or_ln66_1_reg_467;
wire   [0:0] or_ln66_3_fu_343_p2;
reg   [0:0] or_ln66_3_reg_471_pp0_iter1_reg;
reg   [0:0] or_ln66_3_reg_471_pp0_iter2_reg;
reg   [0:0] or_ln66_3_reg_471_pp0_iter3_reg;
reg   [0:0] or_ln66_3_reg_471_pp0_iter4_reg;
reg   [0:0] or_ln66_3_reg_471_pp0_iter5_reg;
reg   [0:0] or_ln66_3_reg_471_pp0_iter6_reg;
reg   [0:0] or_ln66_3_reg_471_pp0_iter7_reg;
reg   [0:0] or_ln66_3_reg_471_pp0_iter8_reg;
reg   [0:0] or_ln66_3_reg_471_pp0_iter9_reg;
reg   [0:0] or_ln66_3_reg_471_pp0_iter10_reg;
reg   [0:0] or_ln66_3_reg_471_pp0_iter11_reg;
reg   [0:0] or_ln66_3_reg_471_pp0_iter12_reg;
reg   [0:0] or_ln66_3_reg_471_pp0_iter13_reg;
reg   [0:0] or_ln66_3_reg_471_pp0_iter14_reg;
wire   [0:0] do_ld_0_fu_352_p2;
reg   [0:0] do_ld_0_reg_475;
wire   [31:0] trunc_ln164_fu_362_p1;
reg   [31:0] trunc_ln164_reg_479;
wire   [31:0] trunc_ln164_1_fu_373_p1;
reg   [31:0] trunc_ln164_1_reg_484;
wire   [0:0] do_ld_2_fu_377_p2;
reg   [0:0] do_ld_2_reg_489;
wire   [31:0] elem_val_2_fu_391_p1;
reg   [31:0] elem_val_2_reg_493;
wire   [31:0] grp_fu_213_p2;
wire   [31:0] grp_fu_218_p2;
reg   [0:0] ap_phi_mux_phi_ln66_phi_fu_132_p4;
wire   [0:0] phitmp_fu_251_p2;
wire   [0:0] ap_phi_reg_pp0_iter0_phi_ln66_reg_129;
reg   [0:0] ap_phi_mux_phi_ln66_1_phi_fu_142_p4;
wire   [0:0] phitmp1_fu_258_p2;
wire   [0:0] ap_phi_reg_pp0_iter0_phi_ln66_1_reg_139;
reg   [0:0] ap_phi_mux_elem_eot_4_phi_fu_152_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_elem_eot_4_reg_149;
reg   [0:0] ap_phi_mux_is_success_phi_fu_162_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_is_success_reg_159;
reg   [0:0] ap_phi_mux_phi_ln66_2_phi_fu_172_p4;
wire   [0:0] phitmp3_fu_318_p2;
wire   [0:0] ap_phi_reg_pp0_iter0_phi_ln66_2_reg_169;
reg   [0:0] ap_phi_mux_phi_ln66_3_phi_fu_182_p4;
wire   [0:0] phitmp2_fu_311_p2;
wire   [0:0] ap_phi_reg_pp0_iter0_phi_ln66_3_reg_179;
reg   [31:0] ap_phi_mux_fifo_ref_0_1_phi_fu_193_p4;
wire   [31:0] elem_val_1_fu_417_p1;
reg   [31:0] ap_phi_reg_pp0_iter1_fifo_ref_0_1_reg_189;
wire   [31:0] ap_phi_reg_pp0_iter0_fifo_ref_0_1_reg_189;
wire   [31:0] ap_phi_reg_pp0_iter0_fifo_ref_2_1_reg_201;
reg   [31:0] ap_phi_reg_pp0_iter1_fifo_ref_2_1_reg_201;
reg   [31:0] ap_phi_reg_pp0_iter2_fifo_ref_2_1_reg_201;
reg   [31:0] ap_phi_reg_pp0_iter3_fifo_ref_2_1_reg_201;
reg   [31:0] ap_phi_reg_pp0_iter4_fifo_ref_2_1_reg_201;
reg   [31:0] ap_phi_reg_pp0_iter5_fifo_ref_2_1_reg_201;
reg   [31:0] ap_phi_reg_pp0_iter6_fifo_ref_2_1_reg_201;
reg   [31:0] ap_phi_reg_pp0_iter7_fifo_ref_2_1_reg_201;
reg   [31:0] count_fu_58;
wire   [31:0] count_2_fu_404_p3;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_count_load_1;
reg   [31:0] ap_sig_allocacmp_count_load_2;
reg   [31:0] ap_sig_allocacmp_count_load;
wire   [0:0] fifo_ld_0_peek_read_nbread_fu_70_p2_0;
wire   [0:0] fifo_ld_1_peek_read_nbread_fu_84_p2_0;
wire   [0:0] fifo_ld_2_peek_read_nbread_fu_98_p2_0;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_213_p1;
wire   [0:0] elem_eot_fu_243_p3;
wire   [0:0] elem_eot_3_fu_303_p3;
wire   [0:0] xor_ln66_fu_331_p2;
wire   [0:0] or_ln66_2_fu_337_p2;
wire   [31:0] trunc_ln164_2_fu_387_p1;
wire   [31:0] count_1_fu_398_p2;
wire   [31:0] grp_fu_224_p2;
wire   [31:0] bitcast_ln174_fu_425_p1;
reg    grp_fu_213_ce;
reg    grp_fu_218_ce;
reg    grp_fu_224_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_453;
reg    ap_condition_402;
reg    ap_condition_480;
reg    ap_condition_475;
reg    ap_condition_446;
reg    ap_condition_791;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Module6Func2_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_fifo_ref_0_1_phi_fu_193_p4),
    .din1(grp_fu_213_p1),
    .ce(grp_fu_213_ce),
    .dout(grp_fu_213_p2)
);

Module6Func2_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_213_p2),
    .din1(ap_phi_reg_pp0_iter7_fifo_ref_2_1_reg_201),
    .ce(grp_fu_218_ce),
    .dout(grp_fu_218_p2)
);

Module6Func2_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_218_p2),
    .din1(32'd1045220557),
    .ce(grp_fu_224_ce),
    .dout(grp_fu_224_p2)
);

Module6Func2_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter15_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_402)) begin
        if ((1'b1 == ap_condition_453)) begin
            ap_phi_reg_pp0_iter1_fifo_ref_0_1_reg_189 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_fifo_ref_0_1_reg_189 <= ap_phi_reg_pp0_iter0_fifo_ref_0_1_reg_189;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_402)) begin
        if ((1'b1 == ap_condition_480)) begin
            ap_phi_reg_pp0_iter1_fifo_ref_2_1_reg_201 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_fifo_ref_2_1_reg_201 <= ap_phi_reg_pp0_iter0_fifo_ref_2_1_reg_201;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_446)) begin
        if ((1'b1 == ap_condition_475)) begin
            ap_phi_reg_pp0_iter2_fifo_ref_2_1_reg_201 <= elem_val_2_reg_493;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_fifo_ref_2_1_reg_201 <= ap_phi_reg_pp0_iter1_fifo_ref_2_1_reg_201;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((1'b1 == ap_condition_791)) begin
            count_fu_58 <= count_2_fu_404_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            count_fu_58 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (or_ln66_fu_265_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln66_reg_459 <= and_ln66_fu_289_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        or_ln66_3_reg_471_pp0_iter10_reg <= or_ln66_3_reg_471_pp0_iter9_reg;
        or_ln66_3_reg_471_pp0_iter11_reg <= or_ln66_3_reg_471_pp0_iter10_reg;
        or_ln66_3_reg_471_pp0_iter12_reg <= or_ln66_3_reg_471_pp0_iter11_reg;
        or_ln66_3_reg_471_pp0_iter13_reg <= or_ln66_3_reg_471_pp0_iter12_reg;
        or_ln66_3_reg_471_pp0_iter14_reg <= or_ln66_3_reg_471_pp0_iter13_reg;
        or_ln66_3_reg_471_pp0_iter15_reg <= or_ln66_3_reg_471_pp0_iter14_reg;
        or_ln66_3_reg_471_pp0_iter2_reg <= or_ln66_3_reg_471_pp0_iter1_reg;
        or_ln66_3_reg_471_pp0_iter3_reg <= or_ln66_3_reg_471_pp0_iter2_reg;
        or_ln66_3_reg_471_pp0_iter4_reg <= or_ln66_3_reg_471_pp0_iter3_reg;
        or_ln66_3_reg_471_pp0_iter5_reg <= or_ln66_3_reg_471_pp0_iter4_reg;
        or_ln66_3_reg_471_pp0_iter6_reg <= or_ln66_3_reg_471_pp0_iter5_reg;
        or_ln66_3_reg_471_pp0_iter7_reg <= or_ln66_3_reg_471_pp0_iter6_reg;
        or_ln66_3_reg_471_pp0_iter8_reg <= or_ln66_3_reg_471_pp0_iter7_reg;
        or_ln66_3_reg_471_pp0_iter9_reg <= or_ln66_3_reg_471_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        or_ln66_3_reg_471_pp0_iter1_reg <= or_ln66_3_reg_471;
        or_ln66_reg_451 <= or_ln66_fu_265_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_fifo_ref_2_1_reg_201 <= ap_phi_reg_pp0_iter2_fifo_ref_2_1_reg_201;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_fifo_ref_2_1_reg_201 <= ap_phi_reg_pp0_iter3_fifo_ref_2_1_reg_201;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_fifo_ref_2_1_reg_201 <= ap_phi_reg_pp0_iter4_fifo_ref_2_1_reg_201;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter6_fifo_ref_2_1_reg_201 <= ap_phi_reg_pp0_iter5_fifo_ref_2_1_reg_201;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_fifo_ref_2_1_reg_201 <= ap_phi_reg_pp0_iter6_fifo_ref_2_1_reg_201;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln66_fu_289_p2) & (or_ln66_3_fu_343_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_ln66_fu_265_p2 == 1'd1) & (or_ln66_1_fu_325_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        do_ld_0_reg_475 <= do_ld_0_fu_352_p2;
        do_ld_2_reg_489 <= do_ld_2_fu_377_p2;
        trunc_ln164_1_reg_484 <= trunc_ln164_1_fu_373_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln66_fu_289_p2) & (do_ld_2_fu_377_p2 == 1'd1) & (or_ln66_3_fu_343_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_ln66_fu_265_p2 == 1'd1) & (or_ln66_1_fu_325_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        elem_val_2_reg_493 <= elem_val_2_fu_391_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln66_fu_289_p2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_ln66_fu_265_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        or_ln66_1_reg_467 <= or_ln66_1_fu_325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln66_fu_289_p2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_ln66_fu_265_p2 == 1'd1) & (or_ln66_1_fu_325_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        or_ln66_3_reg_471 <= or_ln66_3_fu_343_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln66_fu_289_p2) & (do_ld_0_fu_352_p2 == 1'd1) & (or_ln66_3_fu_343_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_ln66_fu_265_p2 == 1'd1) & (or_ln66_1_fu_325_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln164_reg_479 <= trunc_ln164_fu_362_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & ((or_ln66_fu_265_p2 == 1'd0) | ((1'd1 == and_ln66_fu_289_p2) | (or_ln66_1_fu_325_p2 == 1'd0))))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter15_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_3_nbreadreq_fu_76_p3 == 1'd1) & (or_ln66_fu_265_p2 == 1'd1))) begin
        ap_phi_mux_elem_eot_4_phi_fu_152_p4 = fifo_ld_1_peek_dout[32'd32];
    end else begin
        ap_phi_mux_elem_eot_4_phi_fu_152_p4 = ap_phi_reg_pp0_iter0_elem_eot_4_reg_149;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln66_reg_459) & (or_ln66_3_reg_471 == 1'd0) & (do_ld_0_reg_475 == 1'd1) & (or_ln66_1_reg_467 == 1'd1) & (or_ln66_reg_451 == 1'd1))) begin
        ap_phi_mux_fifo_ref_0_1_phi_fu_193_p4 = elem_val_1_fu_417_p1;
    end else begin
        ap_phi_mux_fifo_ref_0_1_phi_fu_193_p4 = ap_phi_reg_pp0_iter1_fifo_ref_0_1_reg_189;
    end
end

always @ (*) begin
    if ((or_ln66_fu_265_p2 == 1'd1)) begin
        if ((tmp_3_nbreadreq_fu_76_p3 == 1'd0)) begin
            ap_phi_mux_is_success_phi_fu_162_p4 = 1'd0;
        end else if ((tmp_3_nbreadreq_fu_76_p3 == 1'd1)) begin
            ap_phi_mux_is_success_phi_fu_162_p4 = fifo_ld_1_peek_read_nbread_fu_84_p2_0;
        end else begin
            ap_phi_mux_is_success_phi_fu_162_p4 = ap_phi_reg_pp0_iter0_is_success_reg_159;
        end
    end else begin
        ap_phi_mux_is_success_phi_fu_162_p4 = ap_phi_reg_pp0_iter0_is_success_reg_159;
    end
end

always @ (*) begin
    if ((tmp_nbreadreq_fu_62_p3 == 1'd0)) begin
        ap_phi_mux_phi_ln66_1_phi_fu_142_p4 = 1'd1;
    end else if ((tmp_nbreadreq_fu_62_p3 == 1'd1)) begin
        ap_phi_mux_phi_ln66_1_phi_fu_142_p4 = phitmp1_fu_258_p2;
    end else begin
        ap_phi_mux_phi_ln66_1_phi_fu_142_p4 = ap_phi_reg_pp0_iter0_phi_ln66_1_reg_139;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln66_fu_289_p2) & (tmp_6_nbreadreq_fu_90_p3 == 1'd1) & (or_ln66_fu_265_p2 == 1'd1))) begin
        ap_phi_mux_phi_ln66_2_phi_fu_172_p4 = phitmp3_fu_318_p2;
    end else begin
        ap_phi_mux_phi_ln66_2_phi_fu_172_p4 = ap_phi_reg_pp0_iter0_phi_ln66_2_reg_169;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln66_fu_289_p2) & (or_ln66_fu_265_p2 == 1'd1))) begin
        if ((tmp_6_nbreadreq_fu_90_p3 == 1'd0)) begin
            ap_phi_mux_phi_ln66_3_phi_fu_182_p4 = 1'd1;
        end else if ((tmp_6_nbreadreq_fu_90_p3 == 1'd1)) begin
            ap_phi_mux_phi_ln66_3_phi_fu_182_p4 = phitmp2_fu_311_p2;
        end else begin
            ap_phi_mux_phi_ln66_3_phi_fu_182_p4 = ap_phi_reg_pp0_iter0_phi_ln66_3_reg_179;
        end
    end else begin
        ap_phi_mux_phi_ln66_3_phi_fu_182_p4 = ap_phi_reg_pp0_iter0_phi_ln66_3_reg_179;
    end
end

always @ (*) begin
    if ((tmp_nbreadreq_fu_62_p3 == 1'd1)) begin
        ap_phi_mux_phi_ln66_phi_fu_132_p4 = phitmp_fu_251_p2;
    end else begin
        ap_phi_mux_phi_ln66_phi_fu_132_p4 = ap_phi_reg_pp0_iter0_phi_ln66_reg_129;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_count_load = 32'd0;
    end else begin
        ap_sig_allocacmp_count_load = count_fu_58;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_count_load_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_count_load_1 = count_fu_58;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_count_load_2 = 32'd0;
    end else begin
        ap_sig_allocacmp_count_load_2 = count_fu_58;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_nbreadreq_fu_62_p3 == 1'd1) & (fifo_ld_0_peek_empty_n == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_ld_0_peek_read = 1'b1;
    end else begin
        fifo_ld_0_peek_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln66_fu_289_p2) & (do_ld_0_fu_352_p2 == 1'd1) & (or_ln66_3_fu_343_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (fifo_ld_0_s_empty_n == 1'b1) & (or_ln66_fu_265_p2 == 1'd1) & (or_ln66_1_fu_325_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_ld_0_s_read = 1'b1;
    end else begin
        fifo_ld_0_s_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_3_nbreadreq_fu_76_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (fifo_ld_1_peek_empty_n == 1'b1) & (or_ln66_fu_265_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_ld_1_peek_read = 1'b1;
    end else begin
        fifo_ld_1_peek_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln66_fu_289_p2) & (or_ln66_3_fu_343_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (fifo_ld_1_s_empty_n == 1'b1) & (or_ln66_fu_265_p2 == 1'd1) & (or_ln66_1_fu_325_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_ld_1_s_read = 1'b1;
    end else begin
        fifo_ld_1_s_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln66_fu_289_p2) & (tmp_6_nbreadreq_fu_90_p3 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (fifo_ld_2_peek_empty_n == 1'b1) & (or_ln66_fu_265_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_ld_2_peek_read = 1'b1;
    end else begin
        fifo_ld_2_peek_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln66_fu_289_p2) & (do_ld_2_fu_377_p2 == 1'd1) & (or_ln66_3_fu_343_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (fifo_ld_2_s_empty_n == 1'b1) & (or_ln66_fu_265_p2 == 1'd1) & (or_ln66_1_fu_325_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_ld_2_s_read = 1'b1;
    end else begin
        fifo_ld_2_s_read = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln66_3_reg_471_pp0_iter15_reg == 1'd0) & (ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_st_0_blk_n = fifo_st_0_full_n;
    end else begin
        fifo_st_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_ln66_3_reg_471_pp0_iter15_reg == 1'd0) & (ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_st_0_write = 1'b1;
    end else begin
        fifo_st_0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_213_ce = 1'b1;
    end else begin
        grp_fu_213_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_218_ce = 1'b1;
    end else begin
        grp_fu_218_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_224_ce = 1'b1;
    end else begin
        grp_fu_224_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln66_fu_289_p2 = (ap_phi_mux_is_success_phi_fu_162_p4 & ap_phi_mux_elem_eot_4_phi_fu_152_p4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((or_ln66_3_reg_471_pp0_iter15_reg == 1'd0) & (fifo_st_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((or_ln66_3_reg_471_pp0_iter15_reg == 1'd0) & (fifo_st_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((or_ln66_3_reg_471_pp0_iter15_reg == 1'd0) & (fifo_st_0_full_n == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp0_stage0_iter16 = ((or_ln66_3_reg_471_pp0_iter15_reg == 1'd0) & (fifo_st_0_full_n == 1'b0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_402 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_446 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_453 = ((1'd0 == and_ln66_fu_289_p2) & (do_ld_0_fu_352_p2 == 1'd0) & (or_ln66_3_fu_343_p2 == 1'd0) & (or_ln66_fu_265_p2 == 1'd1) & (or_ln66_1_fu_325_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_475 = ((1'd0 == and_ln66_reg_459) & (or_ln66_3_reg_471 == 1'd0) & (do_ld_2_reg_489 == 1'd1) & (or_ln66_1_reg_467 == 1'd1) & (or_ln66_reg_451 == 1'd1));
end

always @ (*) begin
    ap_condition_480 = ((1'd0 == and_ln66_fu_289_p2) & (do_ld_2_fu_377_p2 == 1'd0) & (or_ln66_3_fu_343_p2 == 1'd0) & (or_ln66_fu_265_p2 == 1'd1) & (or_ln66_1_fu_325_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_791 = ((1'd0 == and_ln66_fu_289_p2) & (or_ln66_3_fu_343_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln66_fu_265_p2 == 1'd1) & (or_ln66_1_fu_325_p2 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_elem_eot_4_reg_149 = 'bx;

assign ap_phi_reg_pp0_iter0_fifo_ref_0_1_reg_189 = 'bx;

assign ap_phi_reg_pp0_iter0_fifo_ref_2_1_reg_201 = 'bx;

assign ap_phi_reg_pp0_iter0_is_success_reg_159 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln66_1_reg_139 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln66_2_reg_169 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln66_3_reg_179 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln66_reg_129 = 'bx;

assign bitcast_ln174_fu_425_p1 = grp_fu_224_p2;

assign count_1_fu_398_p2 = (ap_sig_allocacmp_count_load + 32'd1);

assign count_2_fu_404_p3 = ((do_ld_2_fu_377_p2[0:0] == 1'b1) ? ap_sig_allocacmp_count_load : count_1_fu_398_p2);

assign do_ld_0_fu_352_p2 = (($signed(ap_sig_allocacmp_count_load_1) > $signed(32'd48)) ? 1'b1 : 1'b0);

assign do_ld_2_fu_377_p2 = (($signed(ap_sig_allocacmp_count_load_2) > $signed(32'd49)) ? 1'b1 : 1'b0);

assign elem_eot_3_fu_303_p3 = fifo_ld_2_peek_dout[32'd32];

assign elem_eot_fu_243_p3 = fifo_ld_0_peek_dout[32'd32];

assign elem_val_1_fu_417_p1 = trunc_ln164_reg_479;

assign elem_val_2_fu_391_p1 = trunc_ln164_2_fu_387_p1;

assign fifo_ld_0_peek_read_nbread_fu_70_p2_0 = fifo_ld_0_peek_empty_n;

assign fifo_ld_1_peek_read_nbread_fu_84_p2_0 = fifo_ld_1_peek_empty_n;

assign fifo_ld_2_peek_read_nbread_fu_98_p2_0 = fifo_ld_2_peek_empty_n;

assign fifo_st_0_din = {{1'd0}, {bitcast_ln174_fu_425_p1}};

assign grp_fu_213_p1 = trunc_ln164_1_reg_484;

assign or_ln66_1_fu_325_p2 = (ap_phi_mux_phi_ln66_3_phi_fu_182_p4 | ap_phi_mux_phi_ln66_2_phi_fu_172_p4);

assign or_ln66_2_fu_337_p2 = (xor_ln66_fu_331_p2 | ap_phi_mux_phi_ln66_3_phi_fu_182_p4);

assign or_ln66_3_fu_343_p2 = (or_ln66_2_fu_337_p2 | ap_phi_mux_phi_ln66_1_phi_fu_142_p4);

assign or_ln66_fu_265_p2 = (ap_phi_mux_phi_ln66_phi_fu_132_p4 | ap_phi_mux_phi_ln66_1_phi_fu_142_p4);

assign phitmp1_fu_258_p2 = (fifo_ld_0_peek_read_nbread_fu_70_p2_0 ^ 1'd1);

assign phitmp2_fu_311_p2 = (fifo_ld_2_peek_read_nbread_fu_98_p2_0 ^ 1'd1);

assign phitmp3_fu_318_p2 = (elem_eot_3_fu_303_p3 ^ 1'd1);

assign phitmp_fu_251_p2 = (elem_eot_fu_243_p3 ^ 1'd1);

assign tmp_3_nbreadreq_fu_76_p3 = fifo_ld_1_s_empty_n;

assign tmp_6_nbreadreq_fu_90_p3 = fifo_ld_2_s_empty_n;

assign tmp_nbreadreq_fu_62_p3 = fifo_ld_0_s_empty_n;

assign trunc_ln164_1_fu_373_p1 = fifo_ld_1_s_dout[31:0];

assign trunc_ln164_2_fu_387_p1 = fifo_ld_2_s_dout[31:0];

assign trunc_ln164_fu_362_p1 = fifo_ld_0_s_dout[31:0];

assign xor_ln66_fu_331_p2 = (ap_phi_mux_is_success_phi_fu_162_p4 ^ 1'd1);

endmodule //Module6Func2_Module6Func2_Pipeline_module_6_2_epoch
