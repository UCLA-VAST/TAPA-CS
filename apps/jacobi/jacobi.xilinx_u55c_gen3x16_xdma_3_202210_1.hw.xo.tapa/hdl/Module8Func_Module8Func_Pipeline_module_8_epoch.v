// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Module8Func_Module8Func_Pipeline_module_8_epoch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dram_t0_bank_0_fifo_din,
        dram_t0_bank_0_fifo_full_n,
        dram_t0_bank_0_fifo_write,
        fifo_ld_0_s_dout,
        fifo_ld_0_s_empty_n,
        fifo_ld_0_s_read,
        fifo_ld_1_s_dout,
        fifo_ld_1_s_empty_n,
        fifo_ld_1_s_read,
        fifo_ld_0_peek_dout,
        fifo_ld_0_peek_empty_n,
        fifo_ld_0_peek_read,
        fifo_ld_1_peek_dout,
        fifo_ld_1_peek_empty_n,
        fifo_ld_1_peek_read
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [64:0] dram_t0_bank_0_fifo_din;
input   dram_t0_bank_0_fifo_full_n;
output   dram_t0_bank_0_fifo_write;
input  [32:0] fifo_ld_0_s_dout;
input   fifo_ld_0_s_empty_n;
output   fifo_ld_0_s_read;
input  [32:0] fifo_ld_1_s_dout;
input   fifo_ld_1_s_empty_n;
output   fifo_ld_1_s_read;
input  [32:0] fifo_ld_0_peek_dout;
input   fifo_ld_0_peek_empty_n;
output   fifo_ld_0_peek_read;
input  [32:0] fifo_ld_1_peek_dout;
input   fifo_ld_1_peek_empty_n;
output   fifo_ld_1_peek_read;

reg ap_idle;
reg dram_t0_bank_0_fifo_write;
reg fifo_ld_0_s_read;
reg fifo_ld_1_s_read;
reg fifo_ld_0_peek_read;
reg fifo_ld_1_peek_read;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] or_ln59_2_reg_251;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] or_ln59_1_fu_199_p2;
wire   [0:0] or_ln59_fu_163_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    dram_t0_bank_0_fifo_blk_n;
wire    ap_block_pp0_stage0;
wire   [0:0] tmp_nbreadreq_fu_46_p3;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] tmp_3_nbreadreq_fu_60_p3;
wire   [0:0] or_ln59_2_fu_205_p2;
wire   [31:0] elem_val_fu_215_p1;
reg   [31:0] elem_val_reg_255;
wire   [31:0] elem_val_1_fu_223_p1;
reg   [31:0] elem_val_1_reg_260;
reg   [0:0] ap_phi_mux_phi_ln59_phi_fu_96_p4;
wire   [0:0] phitmp_fu_149_p2;
wire   [0:0] ap_phi_reg_pp0_iter0_phi_ln59_reg_93;
reg   [0:0] ap_phi_mux_phi_ln59_1_phi_fu_106_p4;
wire   [0:0] phitmp1_fu_156_p2;
wire   [0:0] ap_phi_reg_pp0_iter0_phi_ln59_1_reg_103;
reg   [0:0] ap_phi_mux_phi_ln59_2_phi_fu_116_p4;
wire   [0:0] phitmp3_fu_192_p2;
wire   [0:0] ap_phi_reg_pp0_iter0_phi_ln59_2_reg_113;
reg   [0:0] ap_phi_mux_phi_ln59_3_phi_fu_126_p4;
wire   [0:0] phitmp2_fu_185_p2;
wire   [0:0] ap_phi_reg_pp0_iter0_phi_ln59_3_reg_123;
wire   [0:0] fifo_ld_0_peek_read_nbread_fu_54_p2_0;
wire   [0:0] fifo_ld_1_peek_read_nbread_fu_68_p2_0;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] elem_eot_fu_141_p3;
wire   [0:0] elem_eot_1_fu_177_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_loop_init;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Module8Func_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln59_fu_163_p2 == 1'd1) & (or_ln59_1_fu_199_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_ln59_2_fu_205_p2 == 1'd0))) begin
        elem_val_1_reg_260 <= elem_val_1_fu_223_p1;
        elem_val_reg_255 <= elem_val_fu_215_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln59_fu_163_p2 == 1'd1) & (or_ln59_1_fu_199_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        or_ln59_2_reg_251 <= or_ln59_2_fu_205_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((or_ln59_fu_163_p2 == 1'd0) | (or_ln59_1_fu_199_p2 == 1'd0)))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_nbreadreq_fu_46_p3 == 1'd0)) begin
        ap_phi_mux_phi_ln59_1_phi_fu_106_p4 = 1'd1;
    end else if ((tmp_nbreadreq_fu_46_p3 == 1'd1)) begin
        ap_phi_mux_phi_ln59_1_phi_fu_106_p4 = phitmp1_fu_156_p2;
    end else begin
        ap_phi_mux_phi_ln59_1_phi_fu_106_p4 = ap_phi_reg_pp0_iter0_phi_ln59_1_reg_103;
    end
end

always @ (*) begin
    if (((tmp_3_nbreadreq_fu_60_p3 == 1'd1) & (or_ln59_fu_163_p2 == 1'd1))) begin
        ap_phi_mux_phi_ln59_2_phi_fu_116_p4 = phitmp3_fu_192_p2;
    end else begin
        ap_phi_mux_phi_ln59_2_phi_fu_116_p4 = ap_phi_reg_pp0_iter0_phi_ln59_2_reg_113;
    end
end

always @ (*) begin
    if ((or_ln59_fu_163_p2 == 1'd1)) begin
        if ((tmp_3_nbreadreq_fu_60_p3 == 1'd0)) begin
            ap_phi_mux_phi_ln59_3_phi_fu_126_p4 = 1'd1;
        end else if ((tmp_3_nbreadreq_fu_60_p3 == 1'd1)) begin
            ap_phi_mux_phi_ln59_3_phi_fu_126_p4 = phitmp2_fu_185_p2;
        end else begin
            ap_phi_mux_phi_ln59_3_phi_fu_126_p4 = ap_phi_reg_pp0_iter0_phi_ln59_3_reg_123;
        end
    end else begin
        ap_phi_mux_phi_ln59_3_phi_fu_126_p4 = ap_phi_reg_pp0_iter0_phi_ln59_3_reg_123;
    end
end

always @ (*) begin
    if ((tmp_nbreadreq_fu_46_p3 == 1'd1)) begin
        ap_phi_mux_phi_ln59_phi_fu_96_p4 = phitmp_fu_149_p2;
    end else begin
        ap_phi_mux_phi_ln59_phi_fu_96_p4 = ap_phi_reg_pp0_iter0_phi_ln59_reg_93;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (or_ln59_2_reg_251 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dram_t0_bank_0_fifo_blk_n = dram_t0_bank_0_fifo_full_n;
    end else begin
        dram_t0_bank_0_fifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_ln59_2_reg_251 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dram_t0_bank_0_fifo_write = 1'b1;
    end else begin
        dram_t0_bank_0_fifo_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_46_p3 == 1'd1) & (fifo_ld_0_peek_empty_n == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_ld_0_peek_read = 1'b1;
    end else begin
        fifo_ld_0_peek_read = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_ld_0_s_empty_n == 1'b1) & (or_ln59_fu_163_p2 == 1'd1) & (or_ln59_1_fu_199_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_ln59_2_fu_205_p2 == 1'd0))) begin
        fifo_ld_0_s_read = 1'b1;
    end else begin
        fifo_ld_0_s_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_3_nbreadreq_fu_60_p3 == 1'd1) & (fifo_ld_1_peek_empty_n == 1'b1) & (or_ln59_fu_163_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_ld_1_peek_read = 1'b1;
    end else begin
        fifo_ld_1_peek_read = 1'b0;
    end
end

always @ (*) begin
    if (((fifo_ld_1_s_empty_n == 1'b1) & (or_ln59_fu_163_p2 == 1'd1) & (or_ln59_1_fu_199_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_ln59_2_fu_205_p2 == 1'd0))) begin
        fifo_ld_1_s_read = 1'b1;
    end else begin
        fifo_ld_1_s_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((or_ln59_2_reg_251 == 1'd0) & (dram_t0_bank_0_fifo_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((or_ln59_2_reg_251 == 1'd0) & (dram_t0_bank_0_fifo_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((or_ln59_2_reg_251 == 1'd0) & (dram_t0_bank_0_fifo_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((or_ln59_2_reg_251 == 1'd0) & (dram_t0_bank_0_fifo_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_phi_ln59_1_reg_103 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln59_2_reg_113 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln59_3_reg_123 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln59_reg_93 = 'bx;

assign dram_t0_bank_0_fifo_din = {{{{1'd0}, {elem_val_1_reg_260}}}, {elem_val_reg_255}};

assign elem_eot_1_fu_177_p3 = fifo_ld_1_peek_dout[32'd32];

assign elem_eot_fu_141_p3 = fifo_ld_0_peek_dout[32'd32];

assign elem_val_1_fu_223_p1 = fifo_ld_1_s_dout[31:0];

assign elem_val_fu_215_p1 = fifo_ld_0_s_dout[31:0];

assign fifo_ld_0_peek_read_nbread_fu_54_p2_0 = fifo_ld_0_peek_empty_n;

assign fifo_ld_1_peek_read_nbread_fu_68_p2_0 = fifo_ld_1_peek_empty_n;

assign or_ln59_1_fu_199_p2 = (ap_phi_mux_phi_ln59_3_phi_fu_126_p4 | ap_phi_mux_phi_ln59_2_phi_fu_116_p4);

assign or_ln59_2_fu_205_p2 = (ap_phi_mux_phi_ln59_3_phi_fu_126_p4 | ap_phi_mux_phi_ln59_1_phi_fu_106_p4);

assign or_ln59_fu_163_p2 = (ap_phi_mux_phi_ln59_phi_fu_96_p4 | ap_phi_mux_phi_ln59_1_phi_fu_106_p4);

assign phitmp1_fu_156_p2 = (fifo_ld_0_peek_read_nbread_fu_54_p2_0 ^ 1'd1);

assign phitmp2_fu_185_p2 = (fifo_ld_1_peek_read_nbread_fu_68_p2_0 ^ 1'd1);

assign phitmp3_fu_192_p2 = (elem_eot_1_fu_177_p3 ^ 1'd1);

assign phitmp_fu_149_p2 = (elem_eot_fu_141_p3 ^ 1'd1);

assign tmp_3_nbreadreq_fu_60_p3 = fifo_ld_1_s_empty_n;

assign tmp_nbreadreq_fu_46_p3 = fifo_ld_0_s_empty_n;

endmodule //Module8Func_Module8Func_Pipeline_module_8_epoch
