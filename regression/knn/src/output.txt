I0522 14:53:40.500 tapa.util:162] logging level set to INFO
I0522 14:53:40.500 tapa.tapac:492] tapa version: 0.0.20221113.1
I0522 14:53:40.500 tapa.tapac:496] Python recursion limit set to 3000
I0522 14:53:40.500 tapa.tapac:416] Executing all steps of tapac
W0522 14:53:40.500 tapa.tapac:438] The floorplan option is automatically enabled because a floorplan output file is provided
I0522 14:53:40.612 tapa.tapac:556] added vendor include path `/tools/Xilinx/Vitis_HLS/2022.1/include`
I0522 14:53:48.308 tapa.core:179] extracting HLS C++ files
I0522 14:53:48.328 tapa.core:201] running HLS
I0522 14:53:48.332 tapa.core:239] spawn 8 workers for parallel HLS synthesis of the tasks
I0522 14:59:00.875 tapa.core:282] parsing RTL files and populating tasks
I0522 14:59:03.201 tapa.core:291] parsing krnl_globalSort_L1_L2
I0522 14:59:03.203 tapa.core:295] populating krnl_globalSort_L1_L2
I0522 14:59:03.335 tapa.core:291] parsing krnl_globalSort_L3
I0522 14:59:03.337 tapa.core:295] populating krnl_globalSort_L3
I0522 14:59:03.473 tapa.core:291] parsing krnl_partialKnn_wrapper_0
I0522 14:59:03.475 tapa.core:295] populating krnl_partialKnn_wrapper_0
I0522 14:59:03.475 tapa.core:291] parsing krnl_partialKnn_wrapper_1
I0522 14:59:03.476 tapa.core:295] populating krnl_partialKnn_wrapper_1
I0522 14:59:03.549 tapa.core:291] parsing krnl_partialKnn_wrapper_10
I0522 14:59:03.550 tapa.core:295] populating krnl_partialKnn_wrapper_10
I0522 14:59:03.550 tapa.core:291] parsing krnl_partialKnn_wrapper_11
I0522 14:59:03.552 tapa.core:295] populating krnl_partialKnn_wrapper_11
I0522 14:59:03.552 tapa.core:291] parsing krnl_partialKnn_wrapper_12
I0522 14:59:03.553 tapa.core:295] populating krnl_partialKnn_wrapper_12
I0522 14:59:03.554 tapa.core:291] parsing krnl_partialKnn_wrapper_13
I0522 14:59:03.554 tapa.core:295] populating krnl_partialKnn_wrapper_13
I0522 14:59:05.461 tapa.core:291] parsing krnl_partialKnn_wrapper_14
I0522 14:59:05.462 tapa.core:295] populating krnl_partialKnn_wrapper_14
I0522 14:59:05.489 tapa.core:291] parsing krnl_partialKnn_wrapper_15
I0522 14:59:05.490 tapa.core:295] populating krnl_partialKnn_wrapper_15
I0522 14:59:05.598 tapa.core:291] parsing krnl_partialKnn_wrapper_16
I0522 14:59:05.599 tapa.core:295] populating krnl_partialKnn_wrapper_16
I0522 14:59:05.617 tapa.core:291] parsing krnl_partialKnn_wrapper_17
I0522 14:59:05.618 tapa.core:295] populating krnl_partialKnn_wrapper_17
I0522 14:59:05.772 tapa.core:291] parsing krnl_partialKnn_wrapper_2
I0522 14:59:05.773 tapa.core:295] populating krnl_partialKnn_wrapper_2
I0522 14:59:05.773 tapa.core:291] parsing krnl_partialKnn_wrapper_3
I0522 14:59:05.774 tapa.core:295] populating krnl_partialKnn_wrapper_3
I0522 14:59:05.781 tapa.core:291] parsing krnl_partialKnn_wrapper_4
I0522 14:59:05.783 tapa.core:295] populating krnl_partialKnn_wrapper_4
I0522 14:59:05.865 tapa.core:291] parsing krnl_partialKnn_wrapper_5
I0522 14:59:05.866 tapa.core:295] populating krnl_partialKnn_wrapper_5
I0522 14:59:07.362 tapa.core:291] parsing krnl_partialKnn_wrapper_6
I0522 14:59:07.363 tapa.core:295] populating krnl_partialKnn_wrapper_6
I0522 14:59:07.363 tapa.core:291] parsing krnl_partialKnn_wrapper_7
I0522 14:59:07.364 tapa.core:295] populating krnl_partialKnn_wrapper_7
I0522 14:59:07.364 tapa.core:291] parsing krnl_partialKnn_wrapper_8
I0522 14:59:07.365 tapa.core:295] populating krnl_partialKnn_wrapper_8
I0522 14:59:07.505 tapa.core:291] parsing krnl_partialKnn_wrapper_9
I0522 14:59:07.508 tapa.core:295] populating krnl_partialKnn_wrapper_9
I0522 14:59:07.509 tapa.core:291] parsing Knn
I0522 14:59:07.510 tapa.core:295] populating Knn
I0522 14:59:07.514 tapa.core:299] instrumenting upper-level RTL
I0522 14:59:07.514 tapa.core:373] Running Inter-FPGA floorplanning
I0522 14:59:07.515 tapa.floorplan:80] Inter FPGA floorplan
W0522 14:59:07.521 tapa.task_graph:79] L3_out_dist is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.
W0522 14:59:07.522 tapa.task_graph:79] L3_out_id is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.
W0522 14:59:07.522 tapa.task_graph:79] in_0 is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.
W0522 14:59:07.522 tapa.task_graph:79] in_1 is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.
W0522 14:59:07.522 tapa.task_graph:79] in_10 is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.
W0522 14:59:07.522 tapa.task_graph:79] in_11 is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.
W0522 14:59:07.522 tapa.task_graph:79] in_12 is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.
W0522 14:59:07.522 tapa.task_graph:79] in_13 is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.
W0522 14:59:07.523 tapa.task_graph:79] in_14 is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.
W0522 14:59:07.523 tapa.task_graph:79] in_15 is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.
W0522 14:59:07.523 tapa.task_graph:79] in_16 is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.
W0522 14:59:07.523 tapa.task_graph:79] in_17 is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.
W0522 14:59:07.523 tapa.task_graph:79] in_2 is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.
W0522 14:59:07.523 tapa.task_graph:79] in_3 is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.
W0522 14:59:07.523 tapa.task_graph:79] in_4 is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.
W0522 14:59:07.523 tapa.task_graph:79] in_5 is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.
W0522 14:59:07.523 tapa.task_graph:79] in_6 is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.
W0522 14:59:07.524 tapa.task_graph:79] in_7 is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.
W0522 14:59:07.524 tapa.task_graph:79] in_8 is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.
W0522 14:59:07.524 tapa.task_graph:79] in_9 is assumed to be both read from and written to. If not, please use --read-only-args or --write-only-args for better optimization results.

*********************************************
***         Starting AutoBridge           ***
*********************************************

Version: 0.0.20220512.dev1

Running details logged to /home/nehaprakriya/Documents/tapa/regression/knn/src/run_split_check/autobridge/autobridge-May-22-2024-14:59.log

----------------------------------------------

*** CRITICAL WARNING: Gurobi solver not detected. Floorplanning may take extra time. 
The Gurobi solver is much faster than the open-source solver, and it is free for academia. 
  - Register and download the Gurobi Optimizer at https://www.gurobi.com/downloads/gurobi-optimizer-eula/
  - Unzip the package to your desired directory
  - Obtain an academic license at https://www.gurobi.com/downloads/end-user-license-agreement-academic/
  - Set environment variables GUROBI_HOME and GRB_LICENSE_FILE
      export GUROBI_HOME=[WHERE-YOU-INSTALL] 
      export GRB_LICENSE_FILE=[ADDRESS-OF-YOUR-LICENSE-FILE] 
      export PATH="${PATH}:${GUROBI_HOME}/bin" 
      export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${GUROBI_HOME}/lib" 

Generate task graph visualization in graphviz format: /home/nehaprakriya/Documents/tapa/regression/knn/src/run_split_check/autobridge/task_graph.dot
Adjust the min_area_limit to the actual usage of the design: 0.750000

Floorplan parameters:

  number of FPGAs: 2
  floorplan_strategy: HALF_SLR_LEVEL_FLOORPLANNING
  threshold for switching to iterative partitioning: 200
  floorplan_opt_priority: AREA_PRIORITIZED
  min_area_limit: 0.750000
  max_area_limit: 0.850000
  min_slr_width_limit: 10000
  max_slr_width_limit: 15000
  max_search_time per solving: 600

Start floorplanning, please check the log for the progress...

I0522 14:59:09.438 tapa.tapac:686] Splitting kernel code into 2 FPGAs
I0522 14:59:09.440 tapa.split_kernel:20] out_dist
I0522 14:59:09.440 tapa.split_kernel:20] out_dist
I0522 14:59:09.440 tapa.split_kernel:20] out_dist
I0522 14:59:09.441 tapa.split_kernel:20] out_dist
I0522 14:59:09.441 tapa.split_kernel:20] out_dist
I0522 14:59:09.441 tapa.split_kernel:20] out_dist
I0522 14:59:09.441 tapa.split_kernel:20] L1_out_dist
I0522 14:59:09.441 tapa.split_kernel:20] L1_out_dist
I0522 14:59:09.441 tapa.tapac:688] Created split kernel codes
