// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module krnl_partialKnn_wrapper_16_load_Pipeline_VITIS_LOOP_94_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        searchSpace_0_read_data_s_dout,
        searchSpace_0_read_data_s_empty_n,
        searchSpace_0_read_data_s_read,
        zext_ln94,
        searchSpace_0_read_addr_din,
        searchSpace_0_read_addr_full_n,
        searchSpace_0_read_addr_write,
        local_SP_address0,
        local_SP_ce0,
        local_SP_we0,
        local_SP_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [256:0] searchSpace_0_read_data_s_dout;
input   searchSpace_0_read_data_s_empty_n;
output   searchSpace_0_read_data_s_read;
input  [18:0] zext_ln94;
output  [64:0] searchSpace_0_read_addr_din;
input   searchSpace_0_read_addr_full_n;
output   searchSpace_0_read_addr_write;
output  [11:0] local_SP_address0;
output   local_SP_ce0;
output   local_SP_we0;
output  [255:0] local_SP_d0;

reg ap_idle;
reg searchSpace_0_read_data_s_read;
reg searchSpace_0_read_addr_write;
reg local_SP_ce0;
reg local_SP_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln94_fu_131_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [31:0] zext_ln94_cast_fu_104_p1;
reg   [31:0] zext_ln94_cast_reg_230;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] i_resp_1_reg_235;
wire   [0:0] tmp_3_nbreadreq_fu_70_p3;
reg   [0:0] tmp_3_reg_243;
wire   [255:0] elem_val_V_fu_141_p1;
reg   [255:0] elem_val_V_reg_247;
wire   [63:0] zext_ln101_fu_212_p1;
wire    ap_block_pp0_stage0;
reg   [31:0] i_resp_fu_56;
wire   [31:0] i_resp_2_fu_145_p2;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_i_resp_1;
reg   [31:0] i_req_fu_60;
wire   [31:0] select_ln97_fu_199_p3;
wire   [0:0] icmp_ln97_fu_174_p2;
wire    ap_block_pp0_stage0_01001;
wire   [19:0] tmp_fu_121_p4;
wire   [19:0] tmp_4_fu_164_p4;
wire   [31:0] addr_fu_159_p2;
wire  signed [63:0] sext_ln97_fu_180_p1;
wire   [0:0] select_ln97_fu_199_p0;
wire   [31:0] add_ln98_fu_193_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_212;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

krnl_partialKnn_wrapper_16_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_req_fu_60 <= 32'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln97_fu_174_p2 == 1'd1))) begin
            i_req_fu_60 <= select_ln97_fu_199_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((1'b1 == ap_condition_212)) begin
            i_resp_fu_56 <= i_resp_2_fu_145_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_resp_fu_56 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_nbreadreq_fu_70_p3 == 1'd1) & (icmp_ln94_fu_131_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        elem_val_V_reg_247 <= elem_val_V_fu_141_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_resp_1_reg_235 <= ap_sig_allocacmp_i_resp_1;
        zext_ln94_cast_reg_230[18 : 0] <= zext_ln94_cast_fu_104_p1[18 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_fu_131_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_3_reg_243 <= tmp_3_nbreadreq_fu_70_p3;
    end
end

always @ (*) begin
    if (((icmp_ln94_fu_131_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_resp_1 = 32'd0;
    end else begin
        ap_sig_allocacmp_i_resp_1 = i_resp_fu_56;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_SP_ce0 = 1'b1;
    end else begin
        local_SP_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_3_reg_243 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_SP_we0 = 1'b1;
    end else begin
        local_SP_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((searchSpace_0_read_addr_full_n == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln97_fu_174_p2 == 1'd1))) begin
        searchSpace_0_read_addr_write = 1'b1;
    end else begin
        searchSpace_0_read_addr_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_3_nbreadreq_fu_70_p3 == 1'd1) & (searchSpace_0_read_data_s_empty_n == 1'b1) & (icmp_ln94_fu_131_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        searchSpace_0_read_data_s_read = 1'b1;
    end else begin
        searchSpace_0_read_data_s_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln98_fu_193_p2 = (i_req_fu_60 + 32'd1);

assign addr_fu_159_p2 = (i_req_fu_60 + zext_ln94_cast_reg_230);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_212 = ((tmp_3_nbreadreq_fu_70_p3 == 1'd1) & (icmp_ln94_fu_131_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign elem_val_V_fu_141_p1 = searchSpace_0_read_data_s_dout[255:0];

assign i_resp_2_fu_145_p2 = (ap_sig_allocacmp_i_resp_1 + 32'd1);

assign icmp_ln94_fu_131_p2 = (($signed(tmp_fu_121_p4) < $signed(20'd1)) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_174_p2 = (($signed(tmp_4_fu_164_p4) < $signed(20'd1)) ? 1'b1 : 1'b0);

assign local_SP_address0 = zext_ln101_fu_212_p1;

assign local_SP_d0 = elem_val_V_reg_247;

assign searchSpace_0_read_addr_din = {{1'd0}, {sext_ln97_fu_180_p1}};

assign select_ln97_fu_199_p0 = searchSpace_0_read_addr_full_n;

assign select_ln97_fu_199_p3 = ((select_ln97_fu_199_p0[0:0] == 1'b1) ? add_ln98_fu_193_p2 : i_req_fu_60);

assign sext_ln97_fu_180_p1 = $signed(addr_fu_159_p2);

assign tmp_3_nbreadreq_fu_70_p3 = searchSpace_0_read_data_s_empty_n;

assign tmp_4_fu_164_p4 = {{i_req_fu_60[31:12]}};

assign tmp_fu_121_p4 = {{ap_sig_allocacmp_i_resp_1[31:12]}};

assign zext_ln101_fu_212_p1 = i_resp_1_reg_235;

assign zext_ln94_cast_fu_104_p1 = zext_ln94;

always @ (posedge ap_clk) begin
    zext_ln94_cast_reg_230[31:19] <= 13'b0000000000000;
end

endmodule //krnl_partialKnn_wrapper_16_load_Pipeline_VITIS_LOOP_94_1
