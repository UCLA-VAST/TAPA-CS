// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module krnl_globalSort_L3_krnl_globalSort_L3_Pipeline_VITIS_LOOP_895_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_knnId_write_resp_s_dout,
        output_knnId_write_resp_s_empty_n,
        output_knnId_write_resp_s_read,
        output_knnDist_write_resp_s_dout,
        output_knnDist_write_resp_s_empty_n,
        output_knnDist_write_resp_s_read,
        output_knnDist_write_addr_din,
        output_knnDist_write_addr_full_n,
        output_knnDist_write_addr_write,
        output_knnDist_write_data_din,
        output_knnDist_write_data_full_n,
        output_knnDist_write_data_write,
        output_dist,
        output_dist_1,
        output_dist_2,
        output_dist_3,
        output_dist_4,
        output_dist_5,
        output_dist_6,
        output_dist_7,
        output_dist_8,
        output_dist_9,
        output_knnId_write_addr_din,
        output_knnId_write_addr_full_n,
        output_knnId_write_addr_write,
        output_knnId_write_data_din,
        output_knnId_write_data_full_n,
        output_knnId_write_data_write,
        output_id,
        output_id_1,
        output_id_2,
        output_id_3,
        output_id_4,
        output_id_5,
        output_id_6,
        output_id_7,
        output_id_8,
        output_id_9
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [8:0] output_knnId_write_resp_s_dout;
input   output_knnId_write_resp_s_empty_n;
output   output_knnId_write_resp_s_read;
input  [8:0] output_knnDist_write_resp_s_dout;
input   output_knnDist_write_resp_s_empty_n;
output   output_knnDist_write_resp_s_read;
output  [64:0] output_knnDist_write_addr_din;
input   output_knnDist_write_addr_full_n;
output   output_knnDist_write_addr_write;
output  [32:0] output_knnDist_write_data_din;
input   output_knnDist_write_data_full_n;
output   output_knnDist_write_data_write;
input  [31:0] output_dist;
input  [31:0] output_dist_1;
input  [31:0] output_dist_2;
input  [31:0] output_dist_3;
input  [31:0] output_dist_4;
input  [31:0] output_dist_5;
input  [31:0] output_dist_6;
input  [31:0] output_dist_7;
input  [31:0] output_dist_8;
input  [31:0] output_dist_9;
output  [64:0] output_knnId_write_addr_din;
input   output_knnId_write_addr_full_n;
output   output_knnId_write_addr_write;
output  [32:0] output_knnId_write_data_din;
input   output_knnId_write_data_full_n;
output   output_knnId_write_data_write;
input  [31:0] output_id;
input  [31:0] output_id_1;
input  [31:0] output_id_2;
input  [31:0] output_id_3;
input  [31:0] output_id_4;
input  [31:0] output_id_5;
input  [31:0] output_id_6;
input  [31:0] output_id_7;
input  [31:0] output_id_8;
input  [31:0] output_id_9;

reg ap_idle;
reg output_knnId_write_resp_s_read;
reg output_knnDist_write_resp_s_read;
reg output_knnDist_write_addr_write;
reg output_knnDist_write_data_write;
reg output_knnId_write_addr_write;
reg output_knnId_write_data_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] or_ln895_fu_360_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] i_req_id_fu_98;
wire   [31:0] i_req_id_1_fu_514_p2;
wire   [0:0] icmp_ln914_fu_467_p2;
wire   [0:0] tmp_5_nbwritereq_fu_278_p3;
wire   [0:0] tmp_6_nbwritereq_fu_286_p3;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [31:0] i_req_dist_fu_102;
wire   [31:0] i_req_dist_1_fu_420_p2;
wire   [0:0] icmp_ln899_fu_369_p2;
wire   [0:0] tmp_nbwritereq_fu_234_p3;
wire   [0:0] tmp_8_nbwritereq_fu_242_p3;
reg   [31:0] i_resp_id_fu_106;
wire   [31:0] i_resp_id_2_fu_547_p2;
wire   [0:0] tmp_7_nbreadreq_fu_308_p3;
reg   [31:0] i_resp_dist_fu_110;
wire   [31:0] i_resp_dist_2_fu_453_p2;
wire   [0:0] tmp_3_nbreadreq_fu_264_p3;
wire    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln895_fu_348_p2;
wire   [0:0] icmp_ln895_1_fu_354_p2;
wire   [32:0] or_ln_fu_378_p3;
wire   [31:0] tmp_s_fu_391_p12;
wire   [31:0] bitcast_ln185_fu_407_p1;
wire   [7:0] elem_val_fu_435_p1;
wire   [8:0] zext_ln910_fu_439_p1;
wire   [8:0] add_ln910_fu_443_p2;
wire   [31:0] zext_ln910_1_fu_449_p1;
wire   [32:0] or_ln185_1_fu_476_p3;
wire   [31:0] tmp_1_fu_489_p12;
wire   [7:0] elem_val_1_fu_529_p1;
wire   [8:0] zext_ln925_fu_533_p1;
wire   [8:0] add_ln925_fu_537_p2;
wire   [31:0] zext_ln925_1_fu_543_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_388;
reg    ap_condition_393;
reg    ap_condition_396;
reg    ap_condition_399;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

krnl_globalSort_L3_mux_1032_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mux_1032_32_1_1_U122(
    .din0(output_dist),
    .din1(output_dist_1),
    .din2(output_dist_2),
    .din3(output_dist_3),
    .din4(output_dist_4),
    .din5(output_dist_5),
    .din6(output_dist_6),
    .din7(output_dist_7),
    .din8(output_dist_8),
    .din9(output_dist_9),
    .din10(i_req_dist_fu_102),
    .dout(tmp_s_fu_391_p12)
);

krnl_globalSort_L3_mux_1032_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mux_1032_32_1_1_U123(
    .din0(output_id),
    .din1(output_id_1),
    .din2(output_id_2),
    .din3(output_id_3),
    .din4(output_id_4),
    .din5(output_id_5),
    .din6(output_id_6),
    .din7(output_id_7),
    .din8(output_id_8),
    .din9(output_id_9),
    .din10(i_req_id_fu_98),
    .dout(tmp_1_fu_489_p12)
);

krnl_globalSort_L3_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_req_dist_fu_102 <= 32'd0;
        end else if ((1'b1 == ap_condition_388)) begin
            i_req_dist_fu_102 <= i_req_dist_1_fu_420_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_req_id_fu_98 <= 32'd0;
        end else if ((1'b1 == ap_condition_393)) begin
            i_req_id_fu_98 <= i_req_id_1_fu_514_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_resp_dist_fu_110 <= 32'd0;
        end else if ((1'b1 == ap_condition_396)) begin
            i_resp_dist_fu_110 <= i_resp_dist_2_fu_453_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_resp_id_fu_106 <= 32'd0;
        end else if ((1'b1 == ap_condition_399)) begin
            i_resp_id_fu_106 <= i_resp_id_2_fu_547_p2;
        end
    end
end

always @ (*) begin
    if (((or_ln895_fu_360_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((output_knnDist_write_addr_full_n == 1'b1) & (or_ln895_fu_360_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_8_nbwritereq_fu_242_p3 == 1'd1) & (tmp_nbwritereq_fu_234_p3 == 1'd1) & (icmp_ln899_fu_369_p2 == 1'd1))) begin
        output_knnDist_write_addr_write = 1'b1;
    end else begin
        output_knnDist_write_addr_write = 1'b0;
    end
end

always @ (*) begin
    if (((output_knnDist_write_data_full_n == 1'b1) & (or_ln895_fu_360_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_8_nbwritereq_fu_242_p3 == 1'd1) & (tmp_nbwritereq_fu_234_p3 == 1'd1) & (icmp_ln899_fu_369_p2 == 1'd1))) begin
        output_knnDist_write_data_write = 1'b1;
    end else begin
        output_knnDist_write_data_write = 1'b0;
    end
end

always @ (*) begin
    if (((output_knnDist_write_resp_s_empty_n == 1'b1) & (or_ln895_fu_360_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_3_nbreadreq_fu_264_p3 == 1'd1))) begin
        output_knnDist_write_resp_s_read = 1'b1;
    end else begin
        output_knnDist_write_resp_s_read = 1'b0;
    end
end

always @ (*) begin
    if (((output_knnId_write_addr_full_n == 1'b1) & (or_ln895_fu_360_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_6_nbwritereq_fu_286_p3 == 1'd1) & (tmp_5_nbwritereq_fu_278_p3 == 1'd1) & (icmp_ln914_fu_467_p2 == 1'd1))) begin
        output_knnId_write_addr_write = 1'b1;
    end else begin
        output_knnId_write_addr_write = 1'b0;
    end
end

always @ (*) begin
    if (((output_knnId_write_data_full_n == 1'b1) & (or_ln895_fu_360_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_6_nbwritereq_fu_286_p3 == 1'd1) & (tmp_5_nbwritereq_fu_278_p3 == 1'd1) & (icmp_ln914_fu_467_p2 == 1'd1))) begin
        output_knnId_write_data_write = 1'b1;
    end else begin
        output_knnId_write_data_write = 1'b0;
    end
end

always @ (*) begin
    if (((output_knnId_write_resp_s_empty_n == 1'b1) & (or_ln895_fu_360_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_7_nbreadreq_fu_308_p3 == 1'd1))) begin
        output_knnId_write_resp_s_read = 1'b1;
    end else begin
        output_knnId_write_resp_s_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln910_fu_443_p2 = (zext_ln910_fu_439_p1 + 9'd1);

assign add_ln925_fu_537_p2 = (zext_ln925_fu_533_p1 + 9'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_388 = ((or_ln895_fu_360_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_8_nbwritereq_fu_242_p3 == 1'd1) & (tmp_nbwritereq_fu_234_p3 == 1'd1) & (icmp_ln899_fu_369_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_393 = ((or_ln895_fu_360_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_6_nbwritereq_fu_286_p3 == 1'd1) & (tmp_5_nbwritereq_fu_278_p3 == 1'd1) & (icmp_ln914_fu_467_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_396 = ((or_ln895_fu_360_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_3_nbreadreq_fu_264_p3 == 1'd1));
end

always @ (*) begin
    ap_condition_399 = ((or_ln895_fu_360_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tmp_7_nbreadreq_fu_308_p3 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign bitcast_ln185_fu_407_p1 = tmp_s_fu_391_p12;

assign elem_val_1_fu_529_p1 = output_knnId_write_resp_s_dout[7:0];

assign elem_val_fu_435_p1 = output_knnDist_write_resp_s_dout[7:0];

assign i_req_dist_1_fu_420_p2 = (i_req_dist_fu_102 + 32'd1);

assign i_req_id_1_fu_514_p2 = (i_req_id_fu_98 + 32'd1);

assign i_resp_dist_2_fu_453_p2 = (zext_ln910_1_fu_449_p1 + i_resp_dist_fu_110);

assign i_resp_id_2_fu_547_p2 = (zext_ln925_1_fu_543_p1 + i_resp_id_fu_106);

assign icmp_ln895_1_fu_354_p2 = ((i_resp_id_fu_106 < 32'd10) ? 1'b1 : 1'b0);

assign icmp_ln895_fu_348_p2 = ((i_resp_dist_fu_110 < 32'd10) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_369_p2 = ((i_req_dist_fu_102 < 32'd10) ? 1'b1 : 1'b0);

assign icmp_ln914_fu_467_p2 = ((i_req_id_fu_98 < 32'd10) ? 1'b1 : 1'b0);

assign or_ln185_1_fu_476_p3 = {{1'd0}, {i_req_id_fu_98}};

assign or_ln895_fu_360_p2 = (icmp_ln895_fu_348_p2 | icmp_ln895_1_fu_354_p2);

assign or_ln_fu_378_p3 = {{1'd0}, {i_req_dist_fu_102}};

assign output_knnDist_write_addr_din = or_ln_fu_378_p3;

assign output_knnDist_write_data_din = {{1'd0}, {bitcast_ln185_fu_407_p1}};

assign output_knnId_write_addr_din = or_ln185_1_fu_476_p3;

assign output_knnId_write_data_din = {{1'd0}, {tmp_1_fu_489_p12}};

assign tmp_3_nbreadreq_fu_264_p3 = output_knnDist_write_resp_s_empty_n;

assign tmp_5_nbwritereq_fu_278_p3 = output_knnId_write_addr_full_n;

assign tmp_6_nbwritereq_fu_286_p3 = output_knnId_write_data_full_n;

assign tmp_7_nbreadreq_fu_308_p3 = output_knnId_write_resp_s_empty_n;

assign tmp_8_nbwritereq_fu_242_p3 = output_knnDist_write_data_full_n;

assign tmp_nbwritereq_fu_234_p3 = output_knnDist_write_addr_full_n;

assign zext_ln910_1_fu_449_p1 = add_ln910_fu_443_p2;

assign zext_ln910_fu_439_p1 = elem_val_fu_435_p1;

assign zext_ln925_1_fu_543_p1 = add_ln925_fu_537_p2;

assign zext_ln925_fu_533_p1 = elem_val_1_fu_529_p1;

endmodule //krnl_globalSort_L3_krnl_globalSort_L3_Pipeline_VITIS_LOOP_895_3
